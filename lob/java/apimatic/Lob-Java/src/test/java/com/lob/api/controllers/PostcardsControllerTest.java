/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import com.fasterxml.jackson.core.type.TypeReference;
import com.lob.api.ApiHelper;
import com.lob.api.LobClient;
import com.lob.api.exceptions.ApiException;
import com.lob.api.models.AllPostcards;
import com.lob.api.models.BeforeAfter;
import com.lob.api.models.MailTypeEnum;
import com.lob.api.models.Postcard;
import com.lob.api.models.PostcardEditable;
import com.lob.api.models.PostcardSizeEnum;
import com.lob.api.models.SortBy1;
import com.lob.api.models.containers.SendDate;
import io.apimatic.core.utilities.TestHelper;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class PostcardsControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static LobClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static PostcardsController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getPostcardsController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * Returns a list of your postcards. The addresses are returned sorted by creation date, with
     * the most recently created addresses appearing first.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestPostcardsList() throws Exception {
        // Parameters for the API call
        Integer limit = 10;
        BeforeAfter beforeAfter = null;
        List<String> include = null;
        Map<String, String> dateCreated = null;
        Map<String, String> metadata = null;
        List<PostcardSizeEnum> size = null;
        Boolean scheduled = null;
        SendDate sendDate = null;
        MailTypeEnum mailType = MailTypeEnum.fromString(
                "usps_first_class");
        SortBy1 sortBy = null;

        // Set callback and perform API call
        AllPostcards result = null;
        try {
            result = controller.postcardsList(limit, beforeAfter, include, dateCreated, metadata, size, scheduled, sendDate, mailType, sortBy);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"data\":[{\"id\":\"psc_208e45e48d271294\",\"description\":null,\"metadata\":{},"
                + "\"to\":{\"id\":\"adr_210a8d4b0b76d77b\",\"description\":null,\"name\":\"LEORE AV"
                + "IDAR\",\"company\":null,\"phone\":null,\"email\":null,\"address_line1\":\"210 KI"
                + "NG ST STE 6100\",\"address_line2\":null,\"address_city\":\"SAN FRANCISCO\",\"add"
                + "ress_state\":\"CA\",\"address_zip\":\"94107-1741\",\"address_country\":\"UNITED "
                + "STATES\",\"metadata\":{},\"date_created\":\"2018-12-08T03:01:07.651Z\",\"date_mo"
                + "dified\":\"2018-12-08T03:01:07.651Z\",\"object\":\"address\"},\"url\":\"https://"
                + "lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&"
                + "signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6"
                + "t9WMNsi429Pj7_DA\",\"carrier\":\"USPS\",\"front_template_id\":null,\"back_templa"
                + "te_id\":null,\"front_template_version_id\":null,\"back_template_version_id\":nul"
                + "l,\"date_created\":\"2021-03-24T22:51:42.838Z\",\"date_modified\":\"2021-03-24T2"
                + "2:51:42.838Z\",\"send_date\":\"2021-03-24T22:51:42.838Z\",\"use_type\":\"marketi"
                + "ng\",\"fsc\":false,\"object\":\"postcard\"},{\"id\":\"psc_0e03d1ad7d31f151\",\"d"
                + "escription\":null,\"metadata\":{},\"to\":{\"id\":\"adr_c7cb63d68f8d6\",\"descrip"
                + "tion\":null,\"name\":\"JANE DOE\",\"company\":\"LOB\",\"phone\":\"5555555555\","
                + "\"email\":\"jane.doe@lob.com\",\"address_line1\":\"370 WATER ST\",\"address_line"
                + "2\":\"\",\"address_city\":\"SUMMERSIDE\",\"address_state\":\"PE\",\"address_zip"
                + "\":\"C1N 1C4\",\"address_country\":\"CANADA\",\"metadata\":{},\"date_created\":"
                + "\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-08T03:01:07.651Z\",\"ob"
                + "ject\":\"address\",\"recipient_moved\":false},\"from\":{\"id\":\"adr_210a8d4b0b7"
                + "6d77b\",\"description\":null,\"name\":\"LEORE AVIDAR\",\"company\":null,\"phone"
                + "\":null,\"email\":null,\"address_line1\":\"210 KING ST STE 6100\",\"address_line"
                + "2\":null,\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\",\"address_z"
                + "ip\":\"94107-1741\",\"address_country\":\"UNITED STATES\",\"metadata\":{},\"date"
                + "_created\":\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-08T03:01:07."
                + "651Z\",\"object\":\"address\"},\"url\":\"https://lob-assets.com/postcards/psc_20"
                + "8e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5tOHA_Z4kij4d"
                + "KqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\",\"carrier\":"
                + "\"USPS\",\"front_template_id\":null,\"back_template_id\":null,\"front_template_v"
                + "ersion_id\":null,\"back_template_version_id\":null,\"tracking_events\":[],\"size"
                + "\":\"6x11\",\"mail_type\":\"usps_first_class\",\"merge_variables\":{},\"thumbnai"
                + "ls\":[{\"small\":\"https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_sma"
                + "ll_1.png?expires=1540372221&signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha\",\"medium"
                + "\":\"https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expi"
                + "res=1540372221&signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF\",\"large\":\"https://l"
                + "ob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221&"
                + "signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW\"}],\"expected_delivery_date\":\"2021-"
                + "03-30\",\"date_created\":\"2021-03-24T22:51:42.838Z\",\"date_modified\":\"2021-0"
                + "3-24T22:51:42.838Z\",\"send_date\":\"2021-03-24T22:51:42.838Z\",\"use_type\":\"m"
                + "arketing\",\"fsc\":false,\"object\":\"postcard\"}],\"object\":\"list\",\"previou"
                + "s_url\":null,\"next_url\":null,\"count\":2}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

    /**
     * Creates a new postcard given information.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestPostcardCreate() throws Exception {
        // Parameters for the API call
        PostcardEditable body = ApiHelper.deserialize(
                "{\"description\":\"demo\",\"to\":{\"description\":\"Harry - Office\",\"name\":\"Ha"
                + "rry Zhang\",\"company\":\"Lob\",\"email\":\"harry@lob.com\",\"phone\":\"55555555"
                + "55\",\"address_line1\":\"210 King St\",\"address_line2\":\"# 6100\",\"address_ci"
                + "ty\":\"San Francisco\",\"address_state\":\"CA\",\"address_zip\":\"94107\",\"addr"
                + "ess_country\":\"US\"},\"from\":{\"description\":\"Harry - Office\",\"name\":\"Ha"
                + "rry Zhang\",\"company\":\"Lob\",\"email\":\"harry@lob.com\",\"phone\":\"55555555"
                + "55\",\"address_line1\":\"210 King St\",\"address_line2\":\"# 6100\",\"address_ci"
                + "ty\":\"San Francisco\",\"address_state\":\"CA\",\"address_zip\":\"94107\",\"addr"
                + "ess_country\":\"US\"},\"front\":\"<html><body>Hello</body></html>\",\"back\":\"<"
                + "html><body>Goodbye</body></html>\",\"size\":\"6x9\",\"mail_type\":\"usps_first_c"
                + "lass\",\"merge_variables\":{\"name\":\"Harry\"},\"metadata\":{\"spiffy\":\"true"
                + "\"},\"use_type\":\"marketing\"}",
                PostcardEditable.class);
        String idempotencyKey = 
                "026e7634-24d7-486c-a0bb-4a17fd0eebc5";

        // Set callback and perform API call
        Postcard result = null;
        try {
            result = controller.postcardCreate(body, idempotencyKey);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("ratelimit-limit", TestHelper.NULL_STRING);
        headers.put("ratelimit-remaining", TestHelper.NULL_STRING);
        headers.put("ratelimit-reset", TestHelper.NULL_STRING);
        headers.put("Content-Type", "application/json");
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders().asSimpleMap(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertTrue("Response body does not match in keys", 
                TestHelper.isJsonObjectProperSubsetOf(
                "{\"id\":\"psc_208e45e48d271294\",\"description\":null,\"metadata\":{},\"to\":{\"id"
                + "\":\"adr_210a8d4b0b76d77b\",\"description\":null,\"name\":null,\"company\":\"LOB"
                + "\",\"phone\":null,\"email\":null,\"address_line1\":\"210 KING ST STE 6100\",\"ad"
                + "dress_line2\":null,\"address_city\":\"SAN FRANCISCO\",\"address_state\":\"CA\","
                + "\"address_zip\":\"94107-1741\",\"address_country\":\"UNITED STATES\",\"metadata"
                + "\":{},\"date_created\":\"2018-12-08T03:01:07.651Z\",\"date_modified\":\"2018-12-"
                + "08T03:01:07.651Z\",\"object\":\"address\"},\"url\":\"https://lob-assets.com/post"
                + "cards/psc_208e45e48d271294.pdf?version=v1&expires=1619218302&signature=NfHHLBSr5"
                + "tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\","
                + "\"carrier\":\"USPS\",\"front_template_id\":null,\"back_template_id\":null,\"date"
                + "_created\":\"2021-03-24T22:51:42.838Z\",\"date_modified\":\"2021-03-24T22:51:42."
                + "838Z\",\"send_date\":\"2021-03-24T22:51:42.838Z\",\"use_type\":\"marketing\",\"f"
                + "sc\":false,\"object\":\"postcard\"}",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()), 
                false, true, false));
    }

}
