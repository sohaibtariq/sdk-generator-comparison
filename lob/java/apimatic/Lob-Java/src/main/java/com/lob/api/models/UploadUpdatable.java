/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for UploadUpdatable type.
 */
public class UploadUpdatable {
    private String originalFilename;
    private RequiredAddressColumns requiredAddressColumnMapping;
    private OptionalAddressColumns optionalAddressColumnMapping;
    private Metadata metadata;
    private OptionalNullable<Object> mergeVariableColumnMapping;

    /**
     * Default constructor.
     */
    public UploadUpdatable() {
    }

    /**
     * Initialization constructor.
     * @param  originalFilename  String value for originalFilename.
     * @param  requiredAddressColumnMapping  RequiredAddressColumns value for
     *         requiredAddressColumnMapping.
     * @param  optionalAddressColumnMapping  OptionalAddressColumns value for
     *         optionalAddressColumnMapping.
     * @param  metadata  Metadata value for metadata.
     * @param  mergeVariableColumnMapping  Object value for mergeVariableColumnMapping.
     */
    public UploadUpdatable(
            String originalFilename,
            RequiredAddressColumns requiredAddressColumnMapping,
            OptionalAddressColumns optionalAddressColumnMapping,
            Metadata metadata,
            Object mergeVariableColumnMapping) {
        this.originalFilename = originalFilename;
        this.requiredAddressColumnMapping = requiredAddressColumnMapping;
        this.optionalAddressColumnMapping = optionalAddressColumnMapping;
        this.metadata = metadata;
        this.mergeVariableColumnMapping = OptionalNullable.of(mergeVariableColumnMapping);
    }

    /**
     * Initialization constructor.
     * @param  originalFilename  String value for originalFilename.
     * @param  requiredAddressColumnMapping  RequiredAddressColumns value for
     *         requiredAddressColumnMapping.
     * @param  optionalAddressColumnMapping  OptionalAddressColumns value for
     *         optionalAddressColumnMapping.
     * @param  metadata  Metadata value for metadata.
     * @param  mergeVariableColumnMapping  Object value for mergeVariableColumnMapping.
     */

    protected UploadUpdatable(String originalFilename,
            RequiredAddressColumns requiredAddressColumnMapping,
            OptionalAddressColumns optionalAddressColumnMapping, Metadata metadata,
            OptionalNullable<Object> mergeVariableColumnMapping) {
        this.originalFilename = originalFilename;
        this.requiredAddressColumnMapping = requiredAddressColumnMapping;
        this.optionalAddressColumnMapping = optionalAddressColumnMapping;
        this.metadata = metadata;
        this.mergeVariableColumnMapping = mergeVariableColumnMapping;
    }

    /**
     * Getter for OriginalFilename.
     * Original filename provided when the upload is created.
     * @return Returns the String
     */
    @JsonGetter("originalFilename")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOriginalFilename() {
        return originalFilename;
    }

    /**
     * Setter for OriginalFilename.
     * Original filename provided when the upload is created.
     * @param originalFilename Value for String
     */
    @JsonSetter("originalFilename")
    public void setOriginalFilename(String originalFilename) {
        this.originalFilename = originalFilename;
    }

    /**
     * Getter for RequiredAddressColumnMapping.
     * The mapping of column headers in your file to Lob-required fields for the resource created.
     * See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details.
     * @return Returns the RequiredAddressColumns
     */
    @JsonGetter("requiredAddressColumnMapping")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public RequiredAddressColumns getRequiredAddressColumnMapping() {
        return requiredAddressColumnMapping;
    }

    /**
     * Setter for RequiredAddressColumnMapping.
     * The mapping of column headers in your file to Lob-required fields for the resource created.
     * See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details.
     * @param requiredAddressColumnMapping Value for RequiredAddressColumns
     */
    @JsonSetter("requiredAddressColumnMapping")
    public void setRequiredAddressColumnMapping(RequiredAddressColumns requiredAddressColumnMapping) {
        this.requiredAddressColumnMapping = requiredAddressColumnMapping;
    }

    /**
     * Getter for OptionalAddressColumnMapping.
     * The mapping of column headers in your file to Lob-optional fields for the resource created.
     * See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#optional-columns-3"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details.
     * @return Returns the OptionalAddressColumns
     */
    @JsonGetter("optionalAddressColumnMapping")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public OptionalAddressColumns getOptionalAddressColumnMapping() {
        return optionalAddressColumnMapping;
    }

    /**
     * Setter for OptionalAddressColumnMapping.
     * The mapping of column headers in your file to Lob-optional fields for the resource created.
     * See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#optional-columns-3"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details.
     * @param optionalAddressColumnMapping Value for OptionalAddressColumns
     */
    @JsonSetter("optionalAddressColumnMapping")
    public void setOptionalAddressColumnMapping(OptionalAddressColumns optionalAddressColumnMapping) {
        this.optionalAddressColumnMapping = optionalAddressColumnMapping;
    }

    /**
     * Getter for Metadata.
     * The list of column headers in your file as an array that you want as metadata associated with
     * each mailpiece. See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details.
     * @return Returns the Metadata
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Metadata getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * The list of column headers in your file as an array that you want as metadata associated with
     * each mailpiece. See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#required-columns-2"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details.
     * @param metadata Value for Metadata
     */
    @JsonSetter("metadata")
    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
    }

    /**
     * Internal Getter for MergeVariableColumnMapping.
     * The mapping of column headers in your file to the merge variables present in your creative.
     * See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details. &lt;br /&gt;If a merge variable
     * has the same "name" as a "key" in the `requiredAddressColumnMapping` or
     * `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this
     * object. If a different value is provided, then when the campaign is processing it will get
     * overwritten with the mapped value present in the `requiredAddressColumnMapping` or
     * `optionalAddressColumnMapping` objects. If using customized QR code redirect from the
     * Audience file, then a `qr_code_redirect_url` must be mapped to the column header as used in
     * the CSV.
     * @return Returns the Internal Object
     */
    @JsonGetter("mergeVariableColumnMapping")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Object> internalGetMergeVariableColumnMapping() {
        return this.mergeVariableColumnMapping;
    }

    /**
     * Getter for MergeVariableColumnMapping.
     * The mapping of column headers in your file to the merge variables present in your creative.
     * See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details. &lt;br /&gt;If a merge variable
     * has the same "name" as a "key" in the `requiredAddressColumnMapping` or
     * `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this
     * object. If a different value is provided, then when the campaign is processing it will get
     * overwritten with the mapped value present in the `requiredAddressColumnMapping` or
     * `optionalAddressColumnMapping` objects. If using customized QR code redirect from the
     * Audience file, then a `qr_code_redirect_url` must be mapped to the column header as used in
     * the CSV.
     * @return Returns the Object
     */
    public Object getMergeVariableColumnMapping() {
        return OptionalNullable.getFrom(mergeVariableColumnMapping);
    }

    /**
     * Setter for MergeVariableColumnMapping.
     * The mapping of column headers in your file to the merge variables present in your creative.
     * See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details. &lt;br /&gt;If a merge variable
     * has the same "name" as a "key" in the `requiredAddressColumnMapping` or
     * `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this
     * object. If a different value is provided, then when the campaign is processing it will get
     * overwritten with the mapped value present in the `requiredAddressColumnMapping` or
     * `optionalAddressColumnMapping` objects. If using customized QR code redirect from the
     * Audience file, then a `qr_code_redirect_url` must be mapped to the column header as used in
     * the CSV.
     * @param mergeVariableColumnMapping Value for Object
     */
    @JsonSetter("mergeVariableColumnMapping")
    public void setMergeVariableColumnMapping(Object mergeVariableColumnMapping) {
        this.mergeVariableColumnMapping = OptionalNullable.of(mergeVariableColumnMapping);
    }

    /**
     * UnSetter for MergeVariableColumnMapping.
     * The mapping of column headers in your file to the merge variables present in your creative.
     * See our &lt;a
     * href="https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merge-variable-data-if-applicable-7"
     * target="_blank"&gt;Campaign Audience Guide&lt;/a&gt; for additional details. &lt;br /&gt;If a merge variable
     * has the same "name" as a "key" in the `requiredAddressColumnMapping` or
     * `optionalAddressColumnMapping` objects, then they **CANNOT** have a different value in this
     * object. If a different value is provided, then when the campaign is processing it will get
     * overwritten with the mapped value present in the `requiredAddressColumnMapping` or
     * `optionalAddressColumnMapping` objects. If using customized QR code redirect from the
     * Audience file, then a `qr_code_redirect_url` must be mapped to the column header as used in
     * the CSV.
     */
    public void unsetMergeVariableColumnMapping() {
        mergeVariableColumnMapping = null;
    }

    /**
     * Converts this UploadUpdatable into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UploadUpdatable [" + "originalFilename=" + originalFilename
                + ", requiredAddressColumnMapping=" + requiredAddressColumnMapping
                + ", optionalAddressColumnMapping=" + optionalAddressColumnMapping + ", metadata="
                + metadata + ", mergeVariableColumnMapping=" + mergeVariableColumnMapping + "]";
    }

    /**
     * Builds a new {@link UploadUpdatable.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UploadUpdatable.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .originalFilename(getOriginalFilename())
                .requiredAddressColumnMapping(getRequiredAddressColumnMapping())
                .optionalAddressColumnMapping(getOptionalAddressColumnMapping())
                .metadata(getMetadata());
        builder.mergeVariableColumnMapping = internalGetMergeVariableColumnMapping();
        return builder;
    }

    /**
     * Class to build instances of {@link UploadUpdatable}.
     */
    public static class Builder {
        private String originalFilename;
        private RequiredAddressColumns requiredAddressColumnMapping;
        private OptionalAddressColumns optionalAddressColumnMapping;
        private Metadata metadata;
        private OptionalNullable<Object> mergeVariableColumnMapping;



        /**
         * Setter for originalFilename.
         * @param  originalFilename  String value for originalFilename.
         * @return Builder
         */
        public Builder originalFilename(String originalFilename) {
            this.originalFilename = originalFilename;
            return this;
        }

        /**
         * Setter for requiredAddressColumnMapping.
         * @param  requiredAddressColumnMapping  RequiredAddressColumns value for
         *         requiredAddressColumnMapping.
         * @return Builder
         */
        public Builder requiredAddressColumnMapping(
                RequiredAddressColumns requiredAddressColumnMapping) {
            this.requiredAddressColumnMapping = requiredAddressColumnMapping;
            return this;
        }

        /**
         * Setter for optionalAddressColumnMapping.
         * @param  optionalAddressColumnMapping  OptionalAddressColumns value for
         *         optionalAddressColumnMapping.
         * @return Builder
         */
        public Builder optionalAddressColumnMapping(
                OptionalAddressColumns optionalAddressColumnMapping) {
            this.optionalAddressColumnMapping = optionalAddressColumnMapping;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Metadata value for metadata.
         * @return Builder
         */
        public Builder metadata(Metadata metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for mergeVariableColumnMapping.
         * @param  mergeVariableColumnMapping  Object value for mergeVariableColumnMapping.
         * @return Builder
         */
        public Builder mergeVariableColumnMapping(Object mergeVariableColumnMapping) {
            this.mergeVariableColumnMapping = OptionalNullable.of(mergeVariableColumnMapping);
            return this;
        }

        /**
         * UnSetter for mergeVariableColumnMapping.
         * @return Builder
         */
        public Builder unsetMergeVariableColumnMapping() {
            mergeVariableColumnMapping = null;
            return this;
        }

        /**
         * Builds a new {@link UploadUpdatable} object using the set fields.
         * @return {@link UploadUpdatable}
         */
        public UploadUpdatable build() {
            return new UploadUpdatable(originalFilename, requiredAddressColumnMapping,
                    optionalAddressColumnMapping, metadata, mergeVariableColumnMapping);
        }
    }
}
