/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.lob.api.ApiHelper;
import com.lob.api.models.ReturnEnvelopeReturned;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = ReturnEnvelopeReturned2.ReturnEnvelopeReturned2Deserializer.class)
public abstract class ReturnEnvelopeReturned2 {
    
    /**
     * This is Boolean case.
     * @param mBoolean boolean value for mBoolean.
     * @return The MBooleanCase object.
     */
    public static ReturnEnvelopeReturned2 fromMBoolean(boolean mBoolean) {
        return new MBooleanCase(mBoolean);
    }

    /**
     * This is return_envelope_returned case.
     * @param returnEnvelopeReturned ReturnEnvelopeReturned value for returnEnvelopeReturned.
     * @return The ReturnEnvelopeReturnedCase object.
     */
    public static ReturnEnvelopeReturned2 fromReturnEnvelopeReturned(
            ReturnEnvelopeReturned returnEnvelopeReturned) {
        return returnEnvelopeReturned == null ? null : new ReturnEnvelopeReturnedCase(returnEnvelopeReturned);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R mBoolean(boolean mBoolean);

        R returnEnvelopeReturned(ReturnEnvelopeReturned returnEnvelopeReturned);
    }

    /**
     * This is a implementation class for MBooleanCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "boolean")
    private static class MBooleanCase extends ReturnEnvelopeReturned2 {

        @JsonValue
        private boolean mBoolean;

        MBooleanCase(boolean mBoolean) {
            this.mBoolean = mBoolean;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.mBoolean(this.mBoolean);
        }

        @JsonCreator
        private MBooleanCase(JsonNode jsonNode) throws IOException {
            if (jsonNode.isBoolean()) {
                this.mBoolean = ApiHelper.deserialize(jsonNode, Boolean.class);
            } else {
                throw new IllegalArgumentException();
            }
        }

        @Override
        public String toString() {
            return String.valueOf(mBoolean);
        }
    }

    /**
     * This is a implementation class for ReturnEnvelopeReturnedCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ReturnEnvelopeReturned")
    private static class ReturnEnvelopeReturnedCase extends ReturnEnvelopeReturned2 {

        @JsonValue
        private ReturnEnvelopeReturned returnEnvelopeReturned;

        ReturnEnvelopeReturnedCase(ReturnEnvelopeReturned returnEnvelopeReturned) {
            this.returnEnvelopeReturned = returnEnvelopeReturned;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.returnEnvelopeReturned(this.returnEnvelopeReturned);
        }

        @JsonCreator
        private ReturnEnvelopeReturnedCase(JsonNode jsonNode) throws IOException {
            this.returnEnvelopeReturned = ApiHelper.deserialize(jsonNode,
                ReturnEnvelopeReturned.class);
        }

        @Override
        public String toString() {
            return returnEnvelopeReturned.toString();
        }
    }

    /**
     * This is a custom deserializer class for ReturnEnvelopeReturned2.
     */
    protected static class ReturnEnvelopeReturned2Deserializer
            extends JsonDeserializer<ReturnEnvelopeReturned2> {

        @Override
        public ReturnEnvelopeReturned2 deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(MBooleanCase.class,
                    ReturnEnvelopeReturnedCase.class), true);
        }
    }

}
