/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for UsVerification type.
 */
public class UsVerification {
    private String id;
    private OptionalNullable<String> recipient;
    private String primaryLine;
    private String secondaryLine;
    private String urbanization;
    private String lastLine;
    private DeliverabilityEnum deliverability;
    private Boolean validAddress;
    private UsComponents components;
    private DeliverabilityAnalysis deliverabilityAnalysis;
    private LobConfidenceScore lobConfidenceScore;
    private Object1Enum object;

    /**
     * Default constructor.
     */
    public UsVerification() {
        object = Object1Enum.US_VERIFICATION;
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  recipient  String value for recipient.
     * @param  primaryLine  String value for primaryLine.
     * @param  secondaryLine  String value for secondaryLine.
     * @param  urbanization  String value for urbanization.
     * @param  lastLine  String value for lastLine.
     * @param  deliverability  DeliverabilityEnum value for deliverability.
     * @param  validAddress  Boolean value for validAddress.
     * @param  components  UsComponents value for components.
     * @param  deliverabilityAnalysis  DeliverabilityAnalysis value for deliverabilityAnalysis.
     * @param  lobConfidenceScore  LobConfidenceScore value for lobConfidenceScore.
     * @param  object  Object1Enum value for object.
     */
    public UsVerification(
            String id,
            String recipient,
            String primaryLine,
            String secondaryLine,
            String urbanization,
            String lastLine,
            DeliverabilityEnum deliverability,
            Boolean validAddress,
            UsComponents components,
            DeliverabilityAnalysis deliverabilityAnalysis,
            LobConfidenceScore lobConfidenceScore,
            Object1Enum object) {
        this.id = id;
        this.recipient = OptionalNullable.of(recipient);
        this.primaryLine = primaryLine;
        this.secondaryLine = secondaryLine;
        this.urbanization = urbanization;
        this.lastLine = lastLine;
        this.deliverability = deliverability;
        this.validAddress = validAddress;
        this.components = components;
        this.deliverabilityAnalysis = deliverabilityAnalysis;
        this.lobConfidenceScore = lobConfidenceScore;
        this.object = object;
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  recipient  String value for recipient.
     * @param  primaryLine  String value for primaryLine.
     * @param  secondaryLine  String value for secondaryLine.
     * @param  urbanization  String value for urbanization.
     * @param  lastLine  String value for lastLine.
     * @param  deliverability  DeliverabilityEnum value for deliverability.
     * @param  validAddress  Boolean value for validAddress.
     * @param  components  UsComponents value for components.
     * @param  deliverabilityAnalysis  DeliverabilityAnalysis value for deliverabilityAnalysis.
     * @param  lobConfidenceScore  LobConfidenceScore value for lobConfidenceScore.
     * @param  object  Object1Enum value for object.
     */

    protected UsVerification(String id, OptionalNullable<String> recipient, String primaryLine,
            String secondaryLine, String urbanization, String lastLine,
            DeliverabilityEnum deliverability, Boolean validAddress, UsComponents components,
            DeliverabilityAnalysis deliverabilityAnalysis, LobConfidenceScore lobConfidenceScore,
            Object1Enum object) {
        this.id = id;
        this.recipient = recipient;
        this.primaryLine = primaryLine;
        this.secondaryLine = secondaryLine;
        this.urbanization = urbanization;
        this.lastLine = lastLine;
        this.deliverability = deliverability;
        this.validAddress = validAddress;
        this.components = components;
        this.deliverabilityAnalysis = deliverabilityAnalysis;
        this.lobConfidenceScore = lobConfidenceScore;
        this.object = object;
    }

    /**
     * Getter for Id.
     * Unique identifier prefixed with `us_ver_`.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier prefixed with `us_ver_`.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Internal Getter for Recipient.
     * The intended recipient, typically a person's or firm's name.
     * @return Returns the Internal String
     */
    @JsonGetter("recipient")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRecipient() {
        return this.recipient;
    }

    /**
     * Getter for Recipient.
     * The intended recipient, typically a person's or firm's name.
     * @return Returns the String
     */
    public String getRecipient() {
        return OptionalNullable.getFrom(recipient);
    }

    /**
     * Setter for Recipient.
     * The intended recipient, typically a person's or firm's name.
     * @param recipient Value for String
     */
    @JsonSetter("recipient")
    public void setRecipient(String recipient) {
        this.recipient = OptionalNullable.of(recipient);
    }

    /**
     * UnSetter for Recipient.
     * The intended recipient, typically a person's or firm's name.
     */
    public void unsetRecipient() {
        recipient = null;
    }

    /**
     * Getter for PrimaryLine.
     * The primary delivery line (usually the street address) of the address. Combination of the
     * following applicable `components`: * `primary_number` * `street_predirection` * `street_name`
     * * `street_suffix` * `street_postdirection` * `secondary_designator` * `secondary_number` *
     * `pmb_designator` * `pmb_number`
     * @return Returns the String
     */
    @JsonGetter("primary_line")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPrimaryLine() {
        return primaryLine;
    }

    /**
     * Setter for PrimaryLine.
     * The primary delivery line (usually the street address) of the address. Combination of the
     * following applicable `components`: * `primary_number` * `street_predirection` * `street_name`
     * * `street_suffix` * `street_postdirection` * `secondary_designator` * `secondary_number` *
     * `pmb_designator` * `pmb_number`
     * @param primaryLine Value for String
     */
    @JsonSetter("primary_line")
    public void setPrimaryLine(String primaryLine) {
        this.primaryLine = primaryLine;
    }

    /**
     * Getter for SecondaryLine.
     * The secondary delivery line of the address. This field is typically empty but may contain
     * information if `primary_line` is too long.
     * @return Returns the String
     */
    @JsonGetter("secondary_line")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSecondaryLine() {
        return secondaryLine;
    }

    /**
     * Setter for SecondaryLine.
     * The secondary delivery line of the address. This field is typically empty but may contain
     * information if `primary_line` is too long.
     * @param secondaryLine Value for String
     */
    @JsonSetter("secondary_line")
    public void setSecondaryLine(String secondaryLine) {
        this.secondaryLine = secondaryLine;
    }

    /**
     * Getter for Urbanization.
     * Only present for addresses in Puerto Rico. An urbanization refers to an area, sector, or
     * development within a city. See &lt;a
     * href="https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&amp;text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name."
     * target="_blank"&gt;USPS documentation&lt;/a&gt; for clarification.
     * @return Returns the String
     */
    @JsonGetter("urbanization")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrbanization() {
        return urbanization;
    }

    /**
     * Setter for Urbanization.
     * Only present for addresses in Puerto Rico. An urbanization refers to an area, sector, or
     * development within a city. See &lt;a
     * href="https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations&amp;text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name."
     * target="_blank"&gt;USPS documentation&lt;/a&gt; for clarification.
     * @param urbanization Value for String
     */
    @JsonSetter("urbanization")
    public void setUrbanization(String urbanization) {
        this.urbanization = urbanization;
    }

    /**
     * Getter for LastLine.
     * Combination of the following applicable `components`: * City (`city`) * State (`state`) * ZIP
     * code (`zip_code`) * ZIP+4 (`zip_code_plus_4`)
     * @return Returns the String
     */
    @JsonGetter("last_line")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLastLine() {
        return lastLine;
    }

    /**
     * Setter for LastLine.
     * Combination of the following applicable `components`: * City (`city`) * State (`state`) * ZIP
     * code (`zip_code`) * ZIP+4 (`zip_code_plus_4`)
     * @param lastLine Value for String
     */
    @JsonSetter("last_line")
    public void setLastLine(String lastLine) {
        this.lastLine = lastLine;
    }

    /**
     * Getter for Deliverability.
     * Summarizes the deliverability of the `us_verification` object. For full details, see the
     * `deliverability_analysis` field. Possible values are: * `deliverable` – The address is
     * deliverable by the USPS. * `deliverable_unnecessary_unit` – The address is deliverable, but
     * the secondary unit information is unnecessary. * `deliverable_incorrect_unit` – The address
     * is deliverable to the building's default address but the secondary unit provided may not
     * exist. There is a chance the mail will not reach the intended recipient. *
     * `deliverable_missing_unit` – The address is deliverable to the building's default address but
     * is missing secondary unit information. There is a chance the mail will not reach the intended
     * recipient. * `undeliverable` – The address is not deliverable according to the USPS.
     * @return Returns the DeliverabilityEnum
     */
    @JsonGetter("deliverability")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DeliverabilityEnum getDeliverability() {
        return deliverability;
    }

    /**
     * Setter for Deliverability.
     * Summarizes the deliverability of the `us_verification` object. For full details, see the
     * `deliverability_analysis` field. Possible values are: * `deliverable` – The address is
     * deliverable by the USPS. * `deliverable_unnecessary_unit` – The address is deliverable, but
     * the secondary unit information is unnecessary. * `deliverable_incorrect_unit` – The address
     * is deliverable to the building's default address but the secondary unit provided may not
     * exist. There is a chance the mail will not reach the intended recipient. *
     * `deliverable_missing_unit` – The address is deliverable to the building's default address but
     * is missing secondary unit information. There is a chance the mail will not reach the intended
     * recipient. * `undeliverable` – The address is not deliverable according to the USPS.
     * @param deliverability Value for DeliverabilityEnum
     */
    @JsonSetter("deliverability")
    public void setDeliverability(DeliverabilityEnum deliverability) {
        this.deliverability = deliverability;
    }

    /**
     * Getter for ValidAddress.
     * This field indicates whether an address was found in a more comprehensive address dataset
     * that includes sources from the USPS, open source mapping data, and our proprietary mail
     * delivery data. This field can be interpreted as a representation of whether an address is a
     * real location or not. Additionally a valid address may contradict the deliverability field
     * since an address can be a real valid location but the USPS may not deliver to that address.
     * @return Returns the Boolean
     */
    @JsonGetter("valid_address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getValidAddress() {
        return validAddress;
    }

    /**
     * Setter for ValidAddress.
     * This field indicates whether an address was found in a more comprehensive address dataset
     * that includes sources from the USPS, open source mapping data, and our proprietary mail
     * delivery data. This field can be interpreted as a representation of whether an address is a
     * real location or not. Additionally a valid address may contradict the deliverability field
     * since an address can be a real valid location but the USPS may not deliver to that address.
     * @param validAddress Value for Boolean
     */
    @JsonSetter("valid_address")
    public void setValidAddress(Boolean validAddress) {
        this.validAddress = validAddress;
    }

    /**
     * Getter for Components.
     * A nested object containing a breakdown of each component of an address.
     * @return Returns the UsComponents
     */
    @JsonGetter("components")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UsComponents getComponents() {
        return components;
    }

    /**
     * Setter for Components.
     * A nested object containing a breakdown of each component of an address.
     * @param components Value for UsComponents
     */
    @JsonSetter("components")
    public void setComponents(UsComponents components) {
        this.components = components;
    }

    /**
     * Getter for DeliverabilityAnalysis.
     * A nested object containing a breakdown of the deliverability of an address.
     * @return Returns the DeliverabilityAnalysis
     */
    @JsonGetter("deliverability_analysis")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DeliverabilityAnalysis getDeliverabilityAnalysis() {
        return deliverabilityAnalysis;
    }

    /**
     * Setter for DeliverabilityAnalysis.
     * A nested object containing a breakdown of the deliverability of an address.
     * @param deliverabilityAnalysis Value for DeliverabilityAnalysis
     */
    @JsonSetter("deliverability_analysis")
    public void setDeliverabilityAnalysis(DeliverabilityAnalysis deliverabilityAnalysis) {
        this.deliverabilityAnalysis = deliverabilityAnalysis;
    }

    /**
     * Getter for LobConfidenceScore.
     * Lob Confidence Score is a nested object that provides a numerical value between 0-100 of the
     * likelihood that an address is deliverable based on Lob’s mail delivery data to over half of
     * US households.
     * @return Returns the LobConfidenceScore
     */
    @JsonGetter("lob_confidence_score")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public LobConfidenceScore getLobConfidenceScore() {
        return lobConfidenceScore;
    }

    /**
     * Setter for LobConfidenceScore.
     * Lob Confidence Score is a nested object that provides a numerical value between 0-100 of the
     * likelihood that an address is deliverable based on Lob’s mail delivery data to over half of
     * US households.
     * @param lobConfidenceScore Value for LobConfidenceScore
     */
    @JsonSetter("lob_confidence_score")
    public void setLobConfidenceScore(LobConfidenceScore lobConfidenceScore) {
        this.lobConfidenceScore = lobConfidenceScore;
    }

    /**
     * Getter for Object.
     * Value is resource type.
     * @return Returns the Object1Enum
     */
    @JsonGetter("object")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object1Enum getObject() {
        return object;
    }

    /**
     * Setter for Object.
     * Value is resource type.
     * @param object Value for Object1Enum
     */
    @JsonSetter("object")
    public void setObject(Object1Enum object) {
        this.object = object;
    }

    /**
     * Converts this UsVerification into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UsVerification [" + "id=" + id + ", recipient=" + recipient + ", primaryLine="
                + primaryLine + ", secondaryLine=" + secondaryLine + ", urbanization="
                + urbanization + ", lastLine=" + lastLine + ", deliverability=" + deliverability
                + ", validAddress=" + validAddress + ", components=" + components
                + ", deliverabilityAnalysis=" + deliverabilityAnalysis + ", lobConfidenceScore="
                + lobConfidenceScore + ", object=" + object + "]";
    }

    /**
     * Builds a new {@link UsVerification.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UsVerification.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .primaryLine(getPrimaryLine())
                .secondaryLine(getSecondaryLine())
                .urbanization(getUrbanization())
                .lastLine(getLastLine())
                .deliverability(getDeliverability())
                .validAddress(getValidAddress())
                .components(getComponents())
                .deliverabilityAnalysis(getDeliverabilityAnalysis())
                .lobConfidenceScore(getLobConfidenceScore())
                .object(getObject());
        builder.recipient = internalGetRecipient();
        return builder;
    }

    /**
     * Class to build instances of {@link UsVerification}.
     */
    public static class Builder {
        private String id;
        private OptionalNullable<String> recipient;
        private String primaryLine;
        private String secondaryLine;
        private String urbanization;
        private String lastLine;
        private DeliverabilityEnum deliverability;
        private Boolean validAddress;
        private UsComponents components;
        private DeliverabilityAnalysis deliverabilityAnalysis;
        private LobConfidenceScore lobConfidenceScore;
        private Object1Enum object = Object1Enum.US_VERIFICATION;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for recipient.
         * @param  recipient  String value for recipient.
         * @return Builder
         */
        public Builder recipient(String recipient) {
            this.recipient = OptionalNullable.of(recipient);
            return this;
        }

        /**
         * UnSetter for recipient.
         * @return Builder
         */
        public Builder unsetRecipient() {
            recipient = null;
            return this;
        }

        /**
         * Setter for primaryLine.
         * @param  primaryLine  String value for primaryLine.
         * @return Builder
         */
        public Builder primaryLine(String primaryLine) {
            this.primaryLine = primaryLine;
            return this;
        }

        /**
         * Setter for secondaryLine.
         * @param  secondaryLine  String value for secondaryLine.
         * @return Builder
         */
        public Builder secondaryLine(String secondaryLine) {
            this.secondaryLine = secondaryLine;
            return this;
        }

        /**
         * Setter for urbanization.
         * @param  urbanization  String value for urbanization.
         * @return Builder
         */
        public Builder urbanization(String urbanization) {
            this.urbanization = urbanization;
            return this;
        }

        /**
         * Setter for lastLine.
         * @param  lastLine  String value for lastLine.
         * @return Builder
         */
        public Builder lastLine(String lastLine) {
            this.lastLine = lastLine;
            return this;
        }

        /**
         * Setter for deliverability.
         * @param  deliverability  DeliverabilityEnum value for deliverability.
         * @return Builder
         */
        public Builder deliverability(DeliverabilityEnum deliverability) {
            this.deliverability = deliverability;
            return this;
        }

        /**
         * Setter for validAddress.
         * @param  validAddress  Boolean value for validAddress.
         * @return Builder
         */
        public Builder validAddress(Boolean validAddress) {
            this.validAddress = validAddress;
            return this;
        }

        /**
         * Setter for components.
         * @param  components  UsComponents value for components.
         * @return Builder
         */
        public Builder components(UsComponents components) {
            this.components = components;
            return this;
        }

        /**
         * Setter for deliverabilityAnalysis.
         * @param  deliverabilityAnalysis  DeliverabilityAnalysis value for deliverabilityAnalysis.
         * @return Builder
         */
        public Builder deliverabilityAnalysis(DeliverabilityAnalysis deliverabilityAnalysis) {
            this.deliverabilityAnalysis = deliverabilityAnalysis;
            return this;
        }

        /**
         * Setter for lobConfidenceScore.
         * @param  lobConfidenceScore  LobConfidenceScore value for lobConfidenceScore.
         * @return Builder
         */
        public Builder lobConfidenceScore(LobConfidenceScore lobConfidenceScore) {
            this.lobConfidenceScore = lobConfidenceScore;
            return this;
        }

        /**
         * Setter for object.
         * @param  object  Object1Enum value for object.
         * @return Builder
         */
        public Builder object(Object1Enum object) {
            this.object = object;
            return this;
        }

        /**
         * Builds a new {@link UsVerification} object using the set fields.
         * @return {@link UsVerification}
         */
        public UsVerification build() {
            return new UsVerification(id, recipient, primaryLine, secondaryLine, urbanization,
                    lastLine, deliverability, validAddress, components, deliverabilityAnalysis,
                    lobConfidenceScore, object);
        }
    }
}
