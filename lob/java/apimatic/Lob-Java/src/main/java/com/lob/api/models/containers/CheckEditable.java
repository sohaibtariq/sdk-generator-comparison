/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.lob.api.ApiHelper;
import com.lob.api.models.ImageAtCheckBottom;
import com.lob.api.models.WordsAtCheckBottom;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = CheckEditable.CheckEditableDeserializer.class)
public abstract class CheckEditable {
    
    /**
     * This is words at check bottom case.
     * @param wordsAtCheckBottom WordsAtCheckBottom value for wordsAtCheckBottom.
     * @return The WordsAtCheckBottomCase object.
     */
    public static CheckEditable fromWordsAtCheckBottom(WordsAtCheckBottom wordsAtCheckBottom) {
        return wordsAtCheckBottom == null ? null : new WordsAtCheckBottomCase(wordsAtCheckBottom);
    }

    /**
     * This is image at check bottom case.
     * @param imageAtCheckBottom ImageAtCheckBottom value for imageAtCheckBottom.
     * @return The ImageAtCheckBottomCase object.
     */
    public static CheckEditable fromImageAtCheckBottom(ImageAtCheckBottom imageAtCheckBottom) {
        return imageAtCheckBottom == null ? null : new ImageAtCheckBottomCase(imageAtCheckBottom);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R wordsAtCheckBottom(WordsAtCheckBottom wordsAtCheckBottom);

        R imageAtCheckBottom(ImageAtCheckBottom imageAtCheckBottom);
    }

    /**
     * This is a implementation class for WordsAtCheckBottomCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "WordsAtCheckBottom")
    private static class WordsAtCheckBottomCase extends CheckEditable {

        @JsonValue
        private WordsAtCheckBottom wordsAtCheckBottom;

        WordsAtCheckBottomCase(WordsAtCheckBottom wordsAtCheckBottom) {
            this.wordsAtCheckBottom = wordsAtCheckBottom;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.wordsAtCheckBottom(this.wordsAtCheckBottom);
        }

        @JsonCreator
        private WordsAtCheckBottomCase(JsonNode jsonNode) throws IOException {
            this.wordsAtCheckBottom = ApiHelper.deserialize(jsonNode,
                WordsAtCheckBottom.class);
        }

        @Override
        public String toString() {
            return wordsAtCheckBottom.toString();
        }
    }

    /**
     * This is a implementation class for ImageAtCheckBottomCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ImageAtCheckBottom")
    private static class ImageAtCheckBottomCase extends CheckEditable {

        @JsonValue
        private ImageAtCheckBottom imageAtCheckBottom;

        ImageAtCheckBottomCase(ImageAtCheckBottom imageAtCheckBottom) {
            this.imageAtCheckBottom = imageAtCheckBottom;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.imageAtCheckBottom(this.imageAtCheckBottom);
        }

        @JsonCreator
        private ImageAtCheckBottomCase(JsonNode jsonNode) throws IOException {
            this.imageAtCheckBottom = ApiHelper.deserialize(jsonNode,
                ImageAtCheckBottom.class);
        }

        @Override
        public String toString() {
            return imageAtCheckBottom.toString();
        }
    }

    /**
     * This is a custom deserializer class for CheckEditable.
     */
    protected static class CheckEditableDeserializer
            extends JsonDeserializer<CheckEditable> {

        @Override
        public CheckEditable deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(WordsAtCheckBottomCase.class,
                    ImageAtCheckBottomCase.class), true);
        }
    }

}
