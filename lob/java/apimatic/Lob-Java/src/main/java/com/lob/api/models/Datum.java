/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for Datum type.
 */
public class Datum {
    private Double rowNumber;
    private Status4Enum status;
    private OptionalNullable<String> errorMessage;
    private OptionalNullable<String> mailpieceId;
    private Object originalData;

    /**
     * Default constructor.
     */
    public Datum() {
    }

    /**
     * Initialization constructor.
     * @param  rowNumber  Double value for rowNumber.
     * @param  status  Status4Enum value for status.
     * @param  errorMessage  String value for errorMessage.
     * @param  mailpieceId  String value for mailpieceId.
     * @param  originalData  Object value for originalData.
     */
    public Datum(
            Double rowNumber,
            Status4Enum status,
            String errorMessage,
            String mailpieceId,
            Object originalData) {
        this.rowNumber = rowNumber;
        this.status = status;
        this.errorMessage = OptionalNullable.of(errorMessage);
        this.mailpieceId = OptionalNullable.of(mailpieceId);
        this.originalData = originalData;
    }

    /**
     * Initialization constructor.
     * @param  rowNumber  Double value for rowNumber.
     * @param  status  Status4Enum value for status.
     * @param  errorMessage  String value for errorMessage.
     * @param  mailpieceId  String value for mailpieceId.
     * @param  originalData  Object value for originalData.
     */

    protected Datum(Double rowNumber, Status4Enum status, OptionalNullable<String> errorMessage,
            OptionalNullable<String> mailpieceId, Object originalData) {
        this.rowNumber = rowNumber;
        this.status = status;
        this.errorMessage = errorMessage;
        this.mailpieceId = mailpieceId;
        this.originalData = originalData;
    }

    /**
     * Getter for RowNumber.
     * The row number of the csv file containing this data.
     * @return Returns the Double
     */
    @JsonGetter("rowNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getRowNumber() {
        return rowNumber;
    }

    /**
     * Setter for RowNumber.
     * The row number of the csv file containing this data.
     * @param rowNumber Value for Double
     */
    @JsonSetter("rowNumber")
    public void setRowNumber(Double rowNumber) {
        this.rowNumber = rowNumber;
    }

    /**
     * Getter for Status.
     * The processing status of line item.
     * @return Returns the Status4Enum
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Status4Enum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * The processing status of line item.
     * @param status Value for Status4Enum
     */
    @JsonSetter("status")
    public void setStatus(Status4Enum status) {
        this.status = status;
    }

    /**
     * Internal Getter for ErrorMessage.
     * The error message detailing the reason why processing the line item failed.
     * @return Returns the Internal String
     */
    @JsonGetter("errorMessage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetErrorMessage() {
        return this.errorMessage;
    }

    /**
     * Getter for ErrorMessage.
     * The error message detailing the reason why processing the line item failed.
     * @return Returns the String
     */
    public String getErrorMessage() {
        return OptionalNullable.getFrom(errorMessage);
    }

    /**
     * Setter for ErrorMessage.
     * The error message detailing the reason why processing the line item failed.
     * @param errorMessage Value for String
     */
    @JsonSetter("errorMessage")
    public void setErrorMessage(String errorMessage) {
        this.errorMessage = OptionalNullable.of(errorMessage);
    }

    /**
     * UnSetter for ErrorMessage.
     * The error message detailing the reason why processing the line item failed.
     */
    public void unsetErrorMessage() {
        errorMessage = null;
    }

    /**
     * Internal Getter for MailpieceId.
     * The mailpiece id created from the line item when it was validated.
     * @return Returns the Internal String
     */
    @JsonGetter("mailpieceId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetMailpieceId() {
        return this.mailpieceId;
    }

    /**
     * Getter for MailpieceId.
     * The mailpiece id created from the line item when it was validated.
     * @return Returns the String
     */
    public String getMailpieceId() {
        return OptionalNullable.getFrom(mailpieceId);
    }

    /**
     * Setter for MailpieceId.
     * The mailpiece id created from the line item when it was validated.
     * @param mailpieceId Value for String
     */
    @JsonSetter("mailpieceId")
    public void setMailpieceId(String mailpieceId) {
        this.mailpieceId = OptionalNullable.of(mailpieceId);
    }

    /**
     * UnSetter for MailpieceId.
     * The mailpiece id created from the line item when it was validated.
     */
    public void unsetMailpieceId() {
        mailpieceId = null;
    }

    /**
     * Getter for OriginalData.
     * Key-value pairs where each key is the column header and each value is the value of the column
     * for the row.
     * @return Returns the Object
     */
    @JsonGetter("originalData")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getOriginalData() {
        return originalData;
    }

    /**
     * Setter for OriginalData.
     * Key-value pairs where each key is the column header and each value is the value of the column
     * for the row.
     * @param originalData Value for Object
     */
    @JsonSetter("originalData")
    public void setOriginalData(Object originalData) {
        this.originalData = originalData;
    }

    /**
     * Converts this Datum into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Datum [" + "rowNumber=" + rowNumber + ", status=" + status + ", errorMessage="
                + errorMessage + ", mailpieceId=" + mailpieceId + ", originalData=" + originalData
                + "]";
    }

    /**
     * Builds a new {@link Datum.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Datum.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .rowNumber(getRowNumber())
                .status(getStatus())
                .originalData(getOriginalData());
        builder.errorMessage = internalGetErrorMessage();
        builder.mailpieceId = internalGetMailpieceId();
        return builder;
    }

    /**
     * Class to build instances of {@link Datum}.
     */
    public static class Builder {
        private Double rowNumber;
        private Status4Enum status;
        private OptionalNullable<String> errorMessage;
        private OptionalNullable<String> mailpieceId;
        private Object originalData;



        /**
         * Setter for rowNumber.
         * @param  rowNumber  Double value for rowNumber.
         * @return Builder
         */
        public Builder rowNumber(Double rowNumber) {
            this.rowNumber = rowNumber;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  Status4Enum value for status.
         * @return Builder
         */
        public Builder status(Status4Enum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for errorMessage.
         * @param  errorMessage  String value for errorMessage.
         * @return Builder
         */
        public Builder errorMessage(String errorMessage) {
            this.errorMessage = OptionalNullable.of(errorMessage);
            return this;
        }

        /**
         * UnSetter for errorMessage.
         * @return Builder
         */
        public Builder unsetErrorMessage() {
            errorMessage = null;
            return this;
        }

        /**
         * Setter for mailpieceId.
         * @param  mailpieceId  String value for mailpieceId.
         * @return Builder
         */
        public Builder mailpieceId(String mailpieceId) {
            this.mailpieceId = OptionalNullable.of(mailpieceId);
            return this;
        }

        /**
         * UnSetter for mailpieceId.
         * @return Builder
         */
        public Builder unsetMailpieceId() {
            mailpieceId = null;
            return this;
        }

        /**
         * Setter for originalData.
         * @param  originalData  Object value for originalData.
         * @return Builder
         */
        public Builder originalData(Object originalData) {
            this.originalData = originalData;
            return this;
        }

        /**
         * Builds a new {@link Datum} object using the set fields.
         * @return {@link Datum}
         */
        public Datum build() {
            return new Datum(rowNumber, status, errorMessage, mailpieceId, originalData);
        }
    }
}
