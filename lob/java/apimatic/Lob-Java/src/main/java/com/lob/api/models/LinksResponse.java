/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for LinksResponse type.
 */
public class LinksResponse {
    private Integer count;
    private Integer limit;
    private Integer offset;
    private List<LinkResponse> data;

    /**
     * Default constructor.
     */
    public LinksResponse() {
    }

    /**
     * Initialization constructor.
     * @param  count  Integer value for count.
     * @param  limit  Integer value for limit.
     * @param  offset  Integer value for offset.
     * @param  data  List of LinkResponse value for data.
     */
    public LinksResponse(
            Integer count,
            Integer limit,
            Integer offset,
            List<LinkResponse> data) {
        this.count = count;
        this.limit = limit;
        this.offset = offset;
        this.data = data;
    }

    /**
     * Getter for Count.
     * The number of results in the current response.
     * @return Returns the Integer
     */
    @JsonGetter("count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCount() {
        return count;
    }

    /**
     * Setter for Count.
     * The number of results in the current response.
     * @param count Value for Integer
     */
    @JsonSetter("count")
    public void setCount(Integer count) {
        this.count = count;
    }

    /**
     * Getter for Limit.
     * How many results to return.
     * @return Returns the Integer
     */
    @JsonGetter("limit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getLimit() {
        return limit;
    }

    /**
     * Setter for Limit.
     * How many results to return.
     * @param limit Value for Integer
     */
    @JsonSetter("limit")
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    /**
     * Getter for Offset.
     * An integer that designates the offset at which to begin returning results. Defaults to 0.
     * @return Returns the Integer
     */
    @JsonGetter("offset")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getOffset() {
        return offset;
    }

    /**
     * Setter for Offset.
     * An integer that designates the offset at which to begin returning results. Defaults to 0.
     * @param offset Value for Integer
     */
    @JsonSetter("offset")
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * Getter for Data.
     * list of links
     * @return Returns the List of LinkResponse
     */
    @JsonGetter("data")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<LinkResponse> getData() {
        return data;
    }

    /**
     * Setter for Data.
     * list of links
     * @param data Value for List of LinkResponse
     */
    @JsonSetter("data")
    public void setData(List<LinkResponse> data) {
        this.data = data;
    }

    /**
     * Converts this LinksResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LinksResponse [" + "count=" + count + ", limit=" + limit + ", offset=" + offset
                + ", data=" + data + "]";
    }

    /**
     * Builds a new {@link LinksResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LinksResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .count(getCount())
                .limit(getLimit())
                .offset(getOffset())
                .data(getData());
        return builder;
    }

    /**
     * Class to build instances of {@link LinksResponse}.
     */
    public static class Builder {
        private Integer count;
        private Integer limit;
        private Integer offset;
        private List<LinkResponse> data;



        /**
         * Setter for count.
         * @param  count  Integer value for count.
         * @return Builder
         */
        public Builder count(Integer count) {
            this.count = count;
            return this;
        }

        /**
         * Setter for limit.
         * @param  limit  Integer value for limit.
         * @return Builder
         */
        public Builder limit(Integer limit) {
            this.limit = limit;
            return this;
        }

        /**
         * Setter for offset.
         * @param  offset  Integer value for offset.
         * @return Builder
         */
        public Builder offset(Integer offset) {
            this.offset = offset;
            return this;
        }

        /**
         * Setter for data.
         * @param  data  List of LinkResponse value for data.
         * @return Builder
         */
        public Builder data(List<LinkResponse> data) {
            this.data = data;
            return this;
        }

        /**
         * Builds a new {@link LinksResponse} object using the set fields.
         * @return {@link LinksResponse}
         */
        public LinksResponse build() {
            return new LinksResponse(count, limit, offset, data);
        }
    }
}
