/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for IntlAutocompletions type.
 */
public class IntlAutocompletions {
    private String id;
    private List<IntlSuggestions> suggestions;

    /**
     * Default constructor.
     */
    public IntlAutocompletions() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  suggestions  List of IntlSuggestions value for suggestions.
     */
    public IntlAutocompletions(
            String id,
            List<IntlSuggestions> suggestions) {
        this.id = id;
        this.suggestions = suggestions;
    }

    /**
     * Getter for Id.
     * Unique identifier prefixed with `intl_auto_`.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier prefixed with `intl_auto_`.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Suggestions.
     * An array of objects representing suggested addresses.
     * @return Returns the List of IntlSuggestions
     */
    @JsonGetter("suggestions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<IntlSuggestions> getSuggestions() {
        return suggestions;
    }

    /**
     * Setter for Suggestions.
     * An array of objects representing suggested addresses.
     * @param suggestions Value for List of IntlSuggestions
     */
    @JsonSetter("suggestions")
    public void setSuggestions(List<IntlSuggestions> suggestions) {
        this.suggestions = suggestions;
    }

    /**
     * Converts this IntlAutocompletions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IntlAutocompletions [" + "id=" + id + ", suggestions=" + suggestions + "]";
    }

    /**
     * Builds a new {@link IntlAutocompletions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IntlAutocompletions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .suggestions(getSuggestions());
        return builder;
    }

    /**
     * Class to build instances of {@link IntlAutocompletions}.
     */
    public static class Builder {
        private String id;
        private List<IntlSuggestions> suggestions;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for suggestions.
         * @param  suggestions  List of IntlSuggestions value for suggestions.
         * @return Builder
         */
        public Builder suggestions(List<IntlSuggestions> suggestions) {
            this.suggestions = suggestions;
            return this;
        }

        /**
         * Builds a new {@link IntlAutocompletions} object using the set fields.
         * @return {@link IntlAutocompletions}
         */
        public IntlAutocompletions build() {
            return new IntlAutocompletions(id, suggestions);
        }
    }
}
