/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.util.function.Function;
import java.util.stream.Collectors;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

/**
 * Address verification for non-US addresses
 * &lt;br&gt;
 * &lt;div class="back-to-top" &gt;&lt;a href="#" onclick="toTopLink()"&gt;back to top&lt;/a&gt;&lt;/div&gt;
 * 
 * ## Intl Verifications Test Env
 * 
 * When verifying international addresses, you'll likely want to test against
 * a wide array of addresses to ensure you're handling responses correctly.
 * With your test API key, requests that use specific values for `primary_line`
 * let you explore the responses to many types of addresses:
 * 
 * &lt;table&gt;
 *   &lt;tr&gt;
 *     &lt;th style="white-space: nowrap"&gt;DELIVERABILITY OF SAMPLE RESPONSE&lt;/th&gt;
 *     &lt;th style="white-space: nowrap"&gt;SET &lt;code&gt;primary_line&lt;/code&gt; TO&lt;/th&gt;
 *   &lt;/tr&gt;
 *   &lt;tr&gt;
 *     &lt;td style="white-space: nowrap"&gt;&lt;code&gt;deliverable&lt;/code&gt;&lt;/td&gt;
 *     &lt;td style="white-space: nowrap"&gt;deliverable&lt;/td&gt;
 *   &lt;/tr&gt;
 *   &lt;tr&gt;
 *     &lt;td style="white-space: nowrap"&gt;&lt;code&gt;deliverable_missing_info&lt;/code&gt;&lt;/td&gt;
 *     &lt;td style="white-space: nowrap"&gt;deliverable missing info&lt;/td&gt;
 *   &lt;/tr&gt;
 *   &lt;tr&gt;
 *     &lt;td style="white-space: nowrap"&gt;&lt;code&gt;undeliverable&lt;/code&gt;&lt;/td&gt;
 *     &lt;td style="white-space: nowrap"&gt;undeliverable&lt;/td&gt;
 *   &lt;/tr&gt;
 *   &lt;tr&gt;
 *     &lt;td style="white-space: nowrap"&gt;&lt;code&gt;no_match&lt;/code&gt;&lt;/td&gt;
 *     &lt;td style="white-space: nowrap"&gt;no match&lt;/td&gt;
 *   &lt;/tr&gt;
 * &lt;/table&gt;
 * 
 * See the `test` request &amp; response examples under [Intl Verification Examples](#operation/intl_verification) within the
 * "Verify an international address section" in Intl Verifications.
 * 
 * You can rely on the response from these examples generally matching the response
 * you'd see in the live environment with an address of that type (excluding the `recipient` field).
 * 
 * The test API key does not perform any verification, automatic correction, or standardization
 * for addresses. If you wish to try these features out, use our &lt;a href="https://lob.com/address-verification" target="_blank"&gt;live demo&lt;/a&gt;
 * or the free plan (see &lt;a href="https://lob.com/pricing/address-verification" target="_blank"&gt;our pricing&lt;/a&gt; for details).
 * &lt;div class="back-to-top" &gt;&lt;a href="#" onclick="toTopLink()"&gt;back to top&lt;/a&gt;&lt;/div&gt;
 * 
 */
public class IntlVerifications {
	
	private SDKConfiguration sdkConfiguration;

	public IntlVerifications(SDKConfiguration sdkConfiguration) {
		this.sdkConfiguration = sdkConfiguration;
	}

    /**
     * Bulk Verify
     * Verify a list of international (except US or US territories) address _with a live API key_. Requests to this endpoint with a test API key will return a dummy response based on the primary line you input.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BulkIntlVerificationsResponse bulkIntlVerifications(org.openapis.openapi.models.shared.IntlVerificationsPayload request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/bulk/intl_verifications");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.BulkIntlVerificationsResponse res = new org.openapis.openapi.models.operations.BulkIntlVerificationsResponse(contentType, null, httpRes.statusCode(), httpRes) {{
            intlVerifications = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.IntlVerifications out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.IntlVerifications.class);
                res.intlVerifications = out;
            }
        }

        return res;
    }

    /**
     * Single Verify
     * Verify an international (except US or US territories) address _with a live API key_. Requests to this endpoint with a test API key will return a dummy response based on the primary line you input.
     * @param requestBody
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntlVerificationResponse intlVerification(Object requestBody) throws Exception {
        return this.intlVerification(requestBody, null);
    }

    /**
     * Single Verify
     * Verify an international (except US or US territories) address _with a live API key_. Requests to this endpoint with a test API key will return a dummy response based on the primary line you input.
     * @param requestBody
     * @param xLangOutput
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntlVerificationResponse intlVerification(Object requestBody, org.openapis.openapi.models.shared.LangSpec xLangOutput) throws Exception {
        org.openapis.openapi.models.operations.IntlVerificationRequest request = new org.openapis.openapi.models.operations.IntlVerificationRequest(requestBody);
        request.xLangOutput=xLangOutput;
        
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/intl_verifications");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.IntlVerificationResponse res = new org.openapis.openapi.models.operations.IntlVerificationResponse(contentType, null, httpRes.statusCode(), httpRes) {{
            intlVerification = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.IntlVerification out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.IntlVerification.class);
                res.intlVerification = out;
            }
        }

        return res;
    }
}