/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

/**
 * The Buckslips endpoint allows you to easily create buckslips that can later be used as add-ons for Letters Campaigns. Note that a Letter Campaign with Buckslip add-on requires a minimum send quantity of 5,000 letters.
 * The API provides endpoints for creating buckslips, retrieving individual buckslips, creating buckslip orders, and retrieving a list of buckslips.
 * &lt;div class="back-to-top" &gt;&lt;a href="#" onclick="toTopLink()"&gt;back to top&lt;/a&gt;&lt;/div&gt;
 * 
 */
public class Buckslips {
	
	private SDKConfiguration sdkConfiguration;

	public Buckslips(SDKConfiguration sdkConfiguration) {
		this.sdkConfiguration = sdkConfiguration;
	}

    /**
     * List
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipsListResponse buckslipsList() throws Exception {
        return this.buckslipsList(null, null, null);
    }

    /**
     * List
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @param include Request that the response include the total count by specifying `include=["total_count"]`.

     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipsListResponse buckslipsList(String[] include) throws Exception {
        return this.buckslipsList(null, null, include);
    }

    /**
     * List
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @param beforeAfter `before` and `after` are both optional but only one of them can be in the query at a time.

     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipsListResponse buckslipsList(Object beforeAfter) throws Exception {
        return this.buckslipsList(null, beforeAfter, null);
    }

    /**
     * List
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @param beforeAfter `before` and `after` are both optional but only one of them can be in the query at a time.

     * @param include Request that the response include the total count by specifying `include=["total_count"]`.

     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipsListResponse buckslipsList(Object beforeAfter, String[] include) throws Exception {
        return this.buckslipsList(null, beforeAfter, include);
    }

    /**
     * List
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @param limit How many results to return.
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipsListResponse buckslipsList(Long limit) throws Exception {
        return this.buckslipsList(limit, null, null);
    }

    /**
     * List
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @param limit How many results to return.
     * @param include Request that the response include the total count by specifying `include=["total_count"]`.

     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipsListResponse buckslipsList(Long limit, String[] include) throws Exception {
        return this.buckslipsList(limit, null, include);
    }

    /**
     * List
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @param limit How many results to return.
     * @param beforeAfter `before` and `after` are both optional but only one of them can be in the query at a time.

     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipsListResponse buckslipsList(Long limit, Object beforeAfter) throws Exception {
        return this.buckslipsList(limit, beforeAfter, null);
    }

    /**
     * List
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     * @param limit How many results to return.
     * @param beforeAfter `before` and `after` are both optional but only one of them can be in the query at a time.

     * @param include Request that the response include the total count by specifying `include=["total_count"]`.

     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipsListResponse buckslipsList(Long limit, Object beforeAfter, String[] include) throws Exception {
        org.openapis.openapi.models.operations.BuckslipsListRequest request = new org.openapis.openapi.models.operations.BuckslipsListRequest();
        request.limit=limit;
        request.beforeAfter=beforeAfter;
        request.include=include;
        
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/buckslips");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.BuckslipsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.BuckslipsListResponse res = new org.openapis.openapi.models.operations.BuckslipsListResponse(contentType, httpRes.statusCode(), httpRes) {{
            object = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.BuckslipsListResponseBody out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.BuckslipsListResponseBody.class);
                res.object = out;
            }
        }

        return res;
    }

    /**
     * Create
     * Creates a new buckslip given information
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipCreateResponse buckslipCreate(org.openapis.openapi.models.shared.BuckslipEditable request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/buckslips");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.BuckslipCreateResponse res = new org.openapis.openapi.models.operations.BuckslipCreateResponse(contentType, httpRes.statusCode(), httpRes) {{
            buckslip = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Buckslip out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Buckslip.class);
                res.buckslip = out;
            }
        }

        return res;
    }

    /**
     * Delete
     * Delete an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     * @param buckslipId id of the buckslip
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipDeleteResponse buckslipDelete(String buckslipId) throws Exception {
        org.openapis.openapi.models.operations.BuckslipDeleteRequest request = new org.openapis.openapi.models.operations.BuckslipDeleteRequest(buckslipId);
        
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.BuckslipDeleteRequest.class, baseUrl, "/buckslips/{buckslip_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.BuckslipDeleteResponse res = new org.openapis.openapi.models.operations.BuckslipDeleteResponse(contentType, httpRes.statusCode(), httpRes) {{
            buckslipDeletion = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BuckslipDeletion out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BuckslipDeletion.class);
                res.buckslipDeletion = out;
            }
        }

        return res;
    }

    /**
     * Retrieve
     * Retrieves the details of an existing buckslip. You need only supply the unique customer identifier that was returned upon buckslip creation.
     * @param buckslipId id of the buckslip
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipRetrieveResponse buckslipRetrieve(String buckslipId) throws Exception {
        org.openapis.openapi.models.operations.BuckslipRetrieveRequest request = new org.openapis.openapi.models.operations.BuckslipRetrieveRequest(buckslipId);
        
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.BuckslipRetrieveRequest.class, baseUrl, "/buckslips/{buckslip_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.BuckslipRetrieveResponse res = new org.openapis.openapi.models.operations.BuckslipRetrieveResponse(contentType, httpRes.statusCode(), httpRes) {{
            buckslip = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Buckslip out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Buckslip.class);
                res.buckslip = out;
            }
        }

        return res;
    }

    /**
     * Update
     * Update the details of an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     * @param buckslipId id of the buckslip
     * @param buckslipUpdatable
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipUpdateResponse buckslipUpdate(String buckslipId, org.openapis.openapi.models.shared.BuckslipUpdatable buckslipUpdatable) throws Exception {
        org.openapis.openapi.models.operations.BuckslipUpdateRequest request = new org.openapis.openapi.models.operations.BuckslipUpdateRequest(buckslipId, buckslipUpdatable);
        
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.BuckslipUpdateRequest.class, baseUrl, "/buckslips/{buckslip_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "buckslipUpdatable", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.BuckslipUpdateResponse res = new org.openapis.openapi.models.operations.BuckslipUpdateResponse(contentType, httpRes.statusCode(), httpRes) {{
            buckslip = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Buckslip out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Buckslip.class);
                res.buckslip = out;
            }
        }

        return res;
    }
}