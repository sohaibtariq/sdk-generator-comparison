/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;
import org.openapis.openapi.utils.SpeakeasyMetadata;


public class CampaignUpdatable {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    @SpeakeasyMetadata("form:name=name multipartForm:name=name")
    public String name;

    public CampaignUpdatable withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    @SpeakeasyMetadata("form:name=description multipartForm:name=description")
    public String description;

    public CampaignUpdatable withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * How the campaign should be scheduled. Only value available today is `immediate`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule_type")
    @SpeakeasyMetadata("form:name=schedule_type multipartForm:name=schedule_type")
    public CmpScheduleType scheduleType;

    public CampaignUpdatable withScheduleType(CmpScheduleType scheduleType) {
        this.scheduleType = scheduleType;
        return this;
    }
    
    /**
     * If `schedule_type` is `target_delivery_date`, provide a targeted delivery date for mail pieces in this campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("target_delivery_date")
    @SpeakeasyMetadata("form:name=target_delivery_date multipartForm:name=target_delivery_date")
    public OffsetDateTime targetDeliveryDate;

    public CampaignUpdatable withTargetDeliveryDate(OffsetDateTime targetDeliveryDate) {
        this.targetDeliveryDate = targetDeliveryDate;
        return this;
    }
    
    /**
     * If `schedule_type` is `scheduled_send_date`, provide a date to send this campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("send_date")
    @SpeakeasyMetadata("form:name=send_date multipartForm:name=send_date")
    public OffsetDateTime sendDate;

    public CampaignUpdatable withSendDate(OffsetDateTime sendDate) {
        this.sendDate = sendDate;
        return this;
    }
    
    /**
     * A window, in minutes, within which the campaign can be canceled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancel_window_campaign_minutes")
    @SpeakeasyMetadata("form:name=cancel_window_campaign_minutes multipartForm:name=cancel_window_campaign_minutes")
    public Long cancelWindowCampaignMinutes;

    public CampaignUpdatable withCancelWindowCampaignMinutes(Long cancelWindowCampaignMinutes) {
        this.cancelWindowCampaignMinutes = cancelWindowCampaignMinutes;
        return this;
    }
    
    /**
     * Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `"` and `\`. i.e. '{"customer_id" : "NEWYORK2015"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    @SpeakeasyMetadata("form:name=metadata,json multipartForm:name=metadata,json")
    public java.util.Map<String, String> metadata;

    public CampaignUpdatable withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Whether or not the campaign is still a draft. Can either be excluded or `false`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_draft")
    @SpeakeasyMetadata("form:name=is_draft multipartForm:name=is_draft")
    public Boolean isDraft;

    public CampaignUpdatable withIsDraft(Boolean isDraft) {
        this.isDraft = isDraft;
        return this;
    }
    
    /**
     * The use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type is only allowed if an account default use_type is selected in Account Settings. For more information on use_type, see our  [Help Center article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("use_type")
    @SpeakeasyMetadata("form:name=use_type multipartForm:name=use_type")
    public CmpUseType useType;

    public CampaignUpdatable withUseType(CmpUseType useType) {
        this.useType = useType;
        return this;
    }
    
    /**
     * Whether or not a mail piece should be automatically canceled and not sent if the address is updated via NCOA.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auto_cancel_if_ncoa")
    @SpeakeasyMetadata("form:name=auto_cancel_if_ncoa multipartForm:name=auto_cancel_if_ncoa")
    public Boolean autoCancelIfNcoa;

    public CampaignUpdatable withAutoCancelIfNcoa(Boolean autoCancelIfNcoa) {
        this.autoCancelIfNcoa = autoCancelIfNcoa;
        return this;
    }
    
    public CampaignUpdatable(){}
}
