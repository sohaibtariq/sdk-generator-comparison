/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;


public class Campaign {
    /**
     * A timestamp in ISO 8601 format of the date the resource was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public Campaign withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_modified")
    public OffsetDateTime dateModified;

    public Campaign withDateModified(OffsetDateTime dateModified) {
        this.dateModified = dateModified;
        return this;
    }
    
    /**
     * Only returned if the resource has been successfully deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public Campaign withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * Value is resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object")
    public CampaignObject object;

    public Campaign withObject(CampaignObject object) {
        this.object = object;
        return this;
    }
    
    /**
     * Unique identifier prefixed with `bg_`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billing_group_id")
    public String billingGroupId;

    public Campaign withBillingGroupId(String billingGroupId) {
        this.billingGroupId = billingGroupId;
        return this;
    }
    
    /**
     * Name of the campaign.
     */
    @JsonProperty("name")
    public String name;

    public Campaign withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * 
     */
    @JsonProperty("description")
    public String description;

    public Campaign withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * How the campaign should be scheduled. Only value available today is `immediate`.
     */
    @JsonProperty("schedule_type")
    public CmpScheduleType scheduleType;

    public Campaign withScheduleType(CmpScheduleType scheduleType) {
        this.scheduleType = scheduleType;
        return this;
    }
    
    /**
     * If `schedule_type` is `target_delivery_date`, provide a targeted delivery date for mail pieces in this campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("target_delivery_date")
    public OffsetDateTime targetDeliveryDate;

    public Campaign withTargetDeliveryDate(OffsetDateTime targetDeliveryDate) {
        this.targetDeliveryDate = targetDeliveryDate;
        return this;
    }
    
    /**
     * If `schedule_type` is `scheduled_send_date`, provide a date to send this campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("send_date")
    public OffsetDateTime sendDate;

    public Campaign withSendDate(OffsetDateTime sendDate) {
        this.sendDate = sendDate;
        return this;
    }
    
    /**
     * A window, in minutes, within which the campaign can be canceled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancel_window_campaign_minutes")
    public Long cancelWindowCampaignMinutes;

    public Campaign withCancelWindowCampaignMinutes(Long cancelWindowCampaignMinutes) {
        this.cancelWindowCampaignMinutes = cancelWindowCampaignMinutes;
        return this;
    }
    
    /**
     * Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `"` and `\`. i.e. '{"customer_id" : "NEWYORK2015"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;

    public Campaign withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type is only allowed if an account default use_type is selected in Account Settings. For more information on use_type, see our  [Help Center article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type).
     */
    @JsonProperty("use_type")
    public CmpUseType useType;

    public Campaign withUseType(CmpUseType useType) {
        this.useType = useType;
        return this;
    }
    
    /**
     * Whether or not a mail piece should be automatically canceled and not sent if the address is updated via NCOA.
     */
    @JsonProperty("auto_cancel_if_ncoa")
    public Boolean autoCancelIfNcoa;

    public Campaign withAutoCancelIfNcoa(Boolean autoCancelIfNcoa) {
        this.autoCancelIfNcoa = autoCancelIfNcoa;
        return this;
    }
    
    /**
     * Unique identifier prefixed with `cmp_`.
     */
    @JsonProperty("id")
    public String id;

    public Campaign withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether or not the campaign is still a draft.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_draft")
    public Boolean isDraft;

    public Campaign withIsDraft(Boolean isDraft) {
        this.isDraft = isDraft;
        return this;
    }
    
    /**
     * An array of creatives that have been associated with this campaign.
     */
    @JsonProperty("creatives")
    public Object[] creatives;

    public Campaign withCreatives(Object[] creatives) {
        this.creatives = creatives;
        return this;
    }
    
    /**
     * A single-element array containing the upload object that is assocated with this campaign.
     */
    @JsonProperty("uploads")
    public Upload[] uploads;

    public Campaign withUploads(Upload[] uploads) {
        this.uploads = uploads;
        return this;
    }
    
    public Campaign(@JsonProperty("date_created") OffsetDateTime dateCreated, @JsonProperty("date_modified") OffsetDateTime dateModified, @JsonProperty("name") String name, @JsonProperty("description") String description, @JsonProperty("schedule_type") CmpScheduleType scheduleType, @JsonProperty("use_type") CmpUseType useType, @JsonProperty("auto_cancel_if_ncoa") Boolean autoCancelIfNcoa, @JsonProperty("id") String id, @JsonProperty("creatives") Object[] creatives, @JsonProperty("uploads") Upload[] uploads) {
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.name = name;
        this.description = description;
        this.scheduleType = scheduleType;
        this.useType = useType;
        this.autoCancelIfNcoa = autoCancelIfNcoa;
        this.id = id;
        this.creatives = creatives;
        this.uploads = uploads;
  }
}
