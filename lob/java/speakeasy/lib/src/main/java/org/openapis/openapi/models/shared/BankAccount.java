/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;


public class BankAccount {
    /**
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public BankAccount withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Must be a &lt;a href="https://www.frbservices.org/index.html" target="_blank"&gt;valid US routing number&lt;/a&gt;.
     */
    @JsonProperty("routing_number")
    public String routingNumber;

    public BankAccount withRoutingNumber(String routingNumber) {
        this.routingNumber = routingNumber;
        return this;
    }
    
    @JsonProperty("account_number")
    public String accountNumber;

    public BankAccount withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * The type of entity that holds the account.
     */
    @JsonProperty("account_type")
    public AccountType accountType;

    public BankAccount withAccountType(AccountType accountType) {
        this.accountType = accountType;
        return this;
    }
    
    /**
     * The signatory associated with your account. This name will be printed on checks created with this bank account. If you prefer to use a custom signature image on your checks instead, please create your bank account from the &lt;a href="https://dashboard.lob.com/#/login" target="_blank"&gt;Dashboard&lt;/a&gt;.
     */
    @JsonProperty("signatory")
    public String signatory;

    public BankAccount withSignatory(String signatory) {
        this.signatory = signatory;
        return this;
    }
    
    /**
     * The check template used for printing. The defualt value is `common`. If you bank with JP Morgan Chase and wish to use Positive Pay use the `jpm` template. `jpm` requires additional information to be provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("check_template")
    public CheckTemplate checkTemplate;

    public BankAccount withCheckTemplate(CheckTemplate checkTemplate) {
        this.checkTemplate = checkTemplate;
        return this;
    }
    
    /**
     * The fractional routing number for your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the fractional routing number associated with your home bank institution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fractional_routing_number")
    public String fractionalRoutingNumber;

    public BankAccount withFractionalRoutingNumber(String fractionalRoutingNumber) {
        this.fractionalRoutingNumber = fractionalRoutingNumber;
        return this;
    }
    
    /**
     * The city associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the city associated with your home bank institution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;

    public BankAccount withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * The state associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the state associated with your home bank institution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public BankAccount withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * The zipcode associated with your home bank account. Required for the `jpm` check template only. Please contact a bank representative if you do not know the zipcode associated with your home bank institution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zipcode")
    public String zipcode;

    public BankAccount withZipcode(String zipcode) {
        this.zipcode = zipcode;
        return this;
    }
    
    /**
     * Use metadata to store custom information for tagging and labeling back to your internal systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters and values must be at most 500 characters. Neither can contain the characters `"` and `\`. i.e. '{"customer_id" : "NEWYORK2015"}' Nested objects are not supported.  See [Metadata](#section/Metadata) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;

    public BankAccount withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * A timestamp in ISO 8601 format of the date the resource was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public BankAccount withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_modified")
    public OffsetDateTime dateModified;

    public BankAccount withDateModified(OffsetDateTime dateModified) {
        this.dateModified = dateModified;
        return this;
    }
    
    /**
     * Only returned if the resource has been successfully deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public BankAccount withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * Value is resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object")
    public Object object;

    public BankAccount withObject(Object object) {
        this.object = object;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public BankAccount withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signature_url")
    public String signatureUrl;

    public BankAccount withSignatureUrl(String signatureUrl) {
        this.signatureUrl = signatureUrl;
        return this;
    }
    
    /**
     * The name of the bank based on the provided routing number, e.g. `JPMORGAN CHASE BANK`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bank_name")
    public String bankName;

    public BankAccount withBankName(String bankName) {
        this.bankName = bankName;
        return this;
    }
    
    /**
     * A bank account must be verified before a check can be created. More info [here](#operation/bank_account_verify).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verified")
    public Boolean verified;

    public BankAccount withVerified(Boolean verified) {
        this.verified = verified;
        return this;
    }
    
    public BankAccount(@JsonProperty("routing_number") String routingNumber, @JsonProperty("account_number") String accountNumber, @JsonProperty("account_type") AccountType accountType, @JsonProperty("signatory") String signatory, @JsonProperty("date_created") OffsetDateTime dateCreated, @JsonProperty("date_modified") OffsetDateTime dateModified, @JsonProperty("id") String id) {
        this.routingNumber = routingNumber;
        this.accountNumber = accountNumber;
        this.accountType = accountType;
        this.signatory = signatory;
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.id = id;
  }
}
