/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;


public class LettersListRequest {
    /**
     * How many results to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public LettersListRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * `before` and `after` are both optional but only one of them can be in the query at a time.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before/after")
    public Object beforeAfter;

    public LettersListRequest withBeforeAfter(Object beforeAfter) {
        this.beforeAfter = beforeAfter;
        return this;
    }
    
    /**
     * Request that the response include the total count by specifying `include=["total_count"]`.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include")
    public String[] include;

    public LettersListRequest withInclude(String[] include) {
        this.include = include;
        return this;
    }
    
    /**
     * Filter by date created. Accepted formats are ISO-8601 date or datetime, e.g. `{ "gt": "2012-01-01", "lt": "2012-01-31T12:34:56Z" }` where `gt` is &gt;, `lt` is &lt;, `gte` is ≥, and `lte` is ≤.
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=date_created")
    public java.util.Map<String, String> dateCreated;

    public LettersListRequest withDateCreated(java.util.Map<String, String> dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * Filter by metadata key-value pair`.
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=metadata")
    public java.util.Map<String, String> metadata;

    public LettersListRequest withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Set to `true` to return only color letters. Set to `false` to return only black &amp; white letters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=color")
    public Boolean color;

    public LettersListRequest withColor(Boolean color) {
        this.color = color;
        return this;
    }
    
    /**
     * * `true` - only return orders (past or future) where `send_date` is
     * greater than `date_created`
     * * `false` - only return orders where `send_date` is equal to `date_created`
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=scheduled")
    public Boolean scheduled;

    public LettersListRequest withScheduled(Boolean scheduled) {
        this.scheduled = scheduled;
        return this;
    }
    
    /**
     * Filter by ISO-8601 date or datetime, e.g. `{ "gt": "2012-01-01", "lt": "2012-01-31T12:34:56Z" }` where `gt` is &gt;, `lt` is &lt;, `gte` is ≥, and `lte` is ≤.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=send_date")
    public Object sendDate;

    public LettersListRequest withSendDate(Object sendDate) {
        this.sendDate = sendDate;
        return this;
    }
    
    /**
     * A string designating the mail postage type: * `usps_first_class` - (default) * `usps_standard` - a &lt;a href="https://lob.com/pricing/print-mail#compare" target="_blank"&gt;cheaper option&lt;/a&gt; which is less predictable and takes longer to deliver. `usps_standard` cannot be used with `4x6` postcards or for any postcards sent outside of the United States.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=mail_type")
    public org.openapis.openapi.models.shared.MailType mailType;

    public LettersListRequest withMailType(org.openapis.openapi.models.shared.MailType mailType) {
        this.mailType = mailType;
        return this;
    }
    
    /**
     * Sorts items by ascending or descending dates. Use either `date_created` or `send_date`, not both.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public Object sortBy;

    public LettersListRequest withSortBy(Object sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    public LettersListRequest(){}
}
