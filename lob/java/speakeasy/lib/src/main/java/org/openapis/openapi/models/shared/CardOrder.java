/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;


public class CardOrder {
    /**
     * A timestamp in ISO 8601 format of the date the resource was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public CardOrder withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_modified")
    public OffsetDateTime dateModified;

    public CardOrder withDateModified(OffsetDateTime dateModified) {
        this.dateModified = dateModified;
        return this;
    }
    
    /**
     * Only returned if the resource has been successfully deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public CardOrder withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * Value is resource type.
     */
    @JsonProperty("object")
    public String object;

    public CardOrder withObject(String object) {
        this.object = object;
        return this;
    }
    
    /**
     * Unique identifier prefixed with `co_`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CardOrder withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Unique identifier prefixed with `card_`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_id")
    public String cardId;

    public CardOrder withCardId(String cardId) {
        this.cardId = cardId;
        return this;
    }
    
    /**
     * The status of the card order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CardOrderStatus status;

    public CardOrder withStatus(CardOrderStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * The inventory of the card order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventory")
    public Double inventory;

    public CardOrder withInventory(Double inventory) {
        this.inventory = inventory;
        return this;
    }
    
    /**
     * The quantity of cards ordered
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity_ordered")
    public Double quantityOrdered;

    public CardOrder withQuantityOrdered(Double quantityOrdered) {
        this.quantityOrdered = quantityOrdered;
        return this;
    }
    
    /**
     * The unit price for the card order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit_price")
    public Double unitPrice;

    public CardOrder withUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    /**
     * The reason for cancellation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancelled_reason")
    public String cancelledReason;

    public CardOrder withCancelledReason(String cancelledReason) {
        this.cancelledReason = cancelledReason;
        return this;
    }
    
    /**
     * A timestamp in ISO 8601 format of the date the resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("availability_date")
    public OffsetDateTime availabilityDate;

    public CardOrder withAvailabilityDate(OffsetDateTime availabilityDate) {
        this.availabilityDate = availabilityDate;
        return this;
    }
    
    /**
     * The fixed deadline for the cards to be printed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expected_availability_date")
    public OffsetDateTime expectedAvailabilityDate;

    public CardOrder withExpectedAvailabilityDate(OffsetDateTime expectedAvailabilityDate) {
        this.expectedAvailabilityDate = expectedAvailabilityDate;
        return this;
    }
    
    public CardOrder(@JsonProperty("date_created") OffsetDateTime dateCreated, @JsonProperty("date_modified") OffsetDateTime dateModified, @JsonProperty("object") String object) {
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.object = object;
  }
}
