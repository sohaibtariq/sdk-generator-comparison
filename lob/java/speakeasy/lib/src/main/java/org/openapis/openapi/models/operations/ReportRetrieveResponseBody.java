/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReportRetrieveResponseBody - Returns an report object
 */

public class ReportRetrieveResponseBody {
    @JsonProperty("data")
    public ReportRetrieveData[] data;

    public ReportRetrieveResponseBody withData(ReportRetrieveData[] data) {
        this.data = data;
        return this;
    }
    
    /**
     * Url of next page of items in list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_url")
    public String nextUrl;

    public ReportRetrieveResponseBody withNextUrl(String nextUrl) {
        this.nextUrl = nextUrl;
        return this;
    }
    
    /**
     * Url of previous page of items in list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev_url")
    public String prevUrl;

    public ReportRetrieveResponseBody withPrevUrl(String prevUrl) {
        this.prevUrl = prevUrl;
        return this;
    }
    
    /**
     * number of resources in a set
     */
    @JsonProperty("count")
    public Long count;

    public ReportRetrieveResponseBody withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * Indicates the total number of records. Provided when the request specifies an "include" query parameter
     */
    @JsonProperty("total_count")
    public Long totalCount;

    public ReportRetrieveResponseBody withTotalCount(Long totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    
    public ReportRetrieveResponseBody(@JsonProperty("data") ReportRetrieveData[] data, @JsonProperty("count") Long count, @JsonProperty("total_count") Long totalCount) {
        this.data = data;
        this.count = count;
        this.totalCount = totalCount;
  }
}
