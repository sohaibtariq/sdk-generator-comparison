/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LocationAnalysis - A nested object containing a breakdown of the analysis of a reverse geocoded location.
 */

public class LocationAnalysis {
    /**
     * A positive or negative decimal indicating the geographic latitude of the address, specifying the north-to-south position of a location. This should be used with `longitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`).
     * 
     */
    @JsonProperty("latitude")
    public Float latitude;

    public LocationAnalysis withLatitude(Float latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * A positive or negative decimal indicating the geographic longitude of the address, specifying the north-to-south position of a location. This should be used with `latitude` to pinpoint locations on a map. Will not be returned for undeliverable addresses or military addresses (state is `AA`, `AE`, or `AP`).
     * 
     */
    @JsonProperty("longitude")
    public Float longitude;

    public LocationAnalysis withLongitude(Float longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * The distance from the input location to this exact zip code in miles.
     * 
     */
    @JsonProperty("distance")
    public Float distance;

    public LocationAnalysis withDistance(Float distance) {
        this.distance = distance;
        return this;
    }
    
    public LocationAnalysis(@JsonProperty("latitude") Float latitude, @JsonProperty("longitude") Float longitude, @JsonProperty("distance") Float distance) {
        this.latitude = latitude;
        this.longitude = longitude;
        this.distance = distance;
  }
}
