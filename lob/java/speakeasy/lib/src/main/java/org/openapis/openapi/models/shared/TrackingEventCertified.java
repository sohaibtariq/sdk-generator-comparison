/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TrackingEventCertified - As mail pieces travel through the mail stream, USPS scans their unique barcodes, and Lob processes these mail scans to generate tracking events.
 */

public class TrackingEventCertified {
    /**
     * Unique identifier prefixed with `evnt_`.
     */
    @JsonProperty("id")
    public String id;

    public TrackingEventCertified withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A timestamp in ISO 8601 format of the date USPS registered the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("time")
    public OffsetDateTime time;

    public TrackingEventCertified withTime(OffsetDateTime time) {
        this.time = time;
        return this;
    }
    
    /**
     * A timestamp in ISO 8601 format of the date the resource was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public TrackingEventCertified withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_modified")
    public OffsetDateTime dateModified;

    public TrackingEventCertified withDateModified(OffsetDateTime dateModified) {
        this.dateModified = dateModified;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object")
    public TrackingEventCertifiedObject object;

    public TrackingEventCertified withObject(TrackingEventCertifiedObject object) {
        this.object = object;
        return this;
    }
    
    /**
     * a Certified letter tracking event
     */
    @JsonProperty("type")
    public TrackingEventCertifiedType type;

    public TrackingEventCertified withType(TrackingEventCertifiedType type) {
        this.type = type;
        return this;
    }
    
    /**
     * Name of tracking event for Certified letters. Letters sent with USPS Certified Mail are fully tracked by USPS, therefore their tracking events have an additional details object with more detailed information about the tracking event. Some certified tracking event names have multiple meanings, noted in the list here. See the description of the details object for the full set of combined certified tracking event name meanings.
     * 
     *   * `Mailed` - Package has been accepted into the carrier network for delivery.
     * 
     *   * `In Transit` - Maps to four distinct stages of transit.
     * 
     *   * `In Local Area` - Package is at a location near the end destination.
     * 
     *   * `Processed for Delivery` - Maps to two distinct stages of delivery.
     * 
     *   * `Pickup Available` - Package is available for pickup at carrier location.
     * 
     *   * `Delivered` - Package has been delivered.
     * 
     *   * `Re-Routed` - Package has been forwarded.
     * 
     *   * `Returned to Sender` - Package is to be returned to sender.
     * 
     *   * `Issue` - Maps to (at least) 15 possible issues, some of which are actionable.
     * 
     */
    @JsonProperty("name")
    public TrackingEventCertifiedName name;

    public TrackingEventCertified withName(TrackingEventCertifiedName name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    public TrackingEventDetails details;

    public TrackingEventCertified withDetails(TrackingEventDetails details) {
        this.details = details;
        return this;
    }
    
    /**
     * The zip code in which the event occurred if it exists, otherwise will be the name of a Regional Distribution Center if it exists, otherwise will be null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;

    public TrackingEventCertified withLocation(String location) {
        this.location = location;
        return this;
    }
    
    public TrackingEventCertified(@JsonProperty("id") String id, @JsonProperty("date_created") OffsetDateTime dateCreated, @JsonProperty("date_modified") OffsetDateTime dateModified, @JsonProperty("type") TrackingEventCertifiedType type, @JsonProperty("name") TrackingEventCertifiedName name) {
        this.id = id;
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.type = type;
        this.name = name;
  }
}
