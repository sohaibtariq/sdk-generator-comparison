/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

/**
 * The Buckslip Orders endpoint allows you to easily create buckslip orders for existing buckslips.
 * The API provides endpoints for creating buckslip orders and listing buckslip orders for a given buckslip.
 * &lt;div class="back-to-top" &gt;&lt;a href="#" onclick="toTopLink()"&gt;back to top&lt;/a&gt;&lt;/div&gt;
 * 
 */
public class BuckslipOrders {
	
	private SDKConfiguration sdkConfiguration;

	public BuckslipOrders(SDKConfiguration sdkConfiguration) {
		this.sdkConfiguration = sdkConfiguration;
	}

    /**
     * Retrieve
     * Retrieves the buckslip orders associated with the given buckslip id.
     * @param buckslipId The ID of the buckslip to which the buckslip orders belong.
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipOrdersRetrieveResponse buckslipOrdersRetrieve(String buckslipId) throws Exception {
        return this.buckslipOrdersRetrieve(buckslipId, null, null);
    }

    /**
     * Retrieve
     * Retrieves the buckslip orders associated with the given buckslip id.
     * @param buckslipId The ID of the buckslip to which the buckslip orders belong.
     * @param limit How many results to return.
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipOrdersRetrieveResponse buckslipOrdersRetrieve(String buckslipId, Long limit) throws Exception {
        return this.buckslipOrdersRetrieve(buckslipId, limit, null);
    }

    /**
     * Retrieve
     * Retrieves the buckslip orders associated with the given buckslip id.
     * @param buckslipId The ID of the buckslip to which the buckslip orders belong.
     * @param limit How many results to return.
     * @param offset An integer that designates the offset at which to begin returning results. Defaults to 0.
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipOrdersRetrieveResponse buckslipOrdersRetrieve(String buckslipId, Long limit, Long offset) throws Exception {
        org.openapis.openapi.models.operations.BuckslipOrdersRetrieveRequest request = new org.openapis.openapi.models.operations.BuckslipOrdersRetrieveRequest(buckslipId);
        request.limit=limit;
        request.offset=offset;
        
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.BuckslipOrdersRetrieveRequest.class, baseUrl, "/buckslips/{buckslip_id}/orders", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.BuckslipOrdersRetrieveRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.BuckslipOrdersRetrieveResponse res = new org.openapis.openapi.models.operations.BuckslipOrdersRetrieveResponse(contentType, httpRes.statusCode(), httpRes) {{
            object = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.BuckslipOrdersRetrieveResponseBody out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.BuckslipOrdersRetrieveResponseBody.class);
                res.object = out;
            }
        }

        return res;
    }

    /**
     * Create
     * Creates a new buckslip order given information
     * @param buckslipId The ID of the buckslip to which the buckslip orders belong.
     * @param buckslipOrderEditable
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BuckslipOrderCreateResponse buckslipOrderCreate(String buckslipId, org.openapis.openapi.models.shared.BuckslipOrderEditable buckslipOrderEditable) throws Exception {
        org.openapis.openapi.models.operations.BuckslipOrderCreateRequest request = new org.openapis.openapi.models.operations.BuckslipOrderCreateRequest(buckslipId, buckslipOrderEditable);
        
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.BuckslipOrderCreateRequest.class, baseUrl, "/buckslips/{buckslip_id}/orders", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "buckslipOrderEditable", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", this.sdkConfiguration.userAgent);
        
        HTTPClient client = this.sdkConfiguration.securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");
        
        org.openapis.openapi.models.operations.BuckslipOrderCreateResponse res = new org.openapis.openapi.models.operations.BuckslipOrderCreateResponse(contentType, httpRes.statusCode(), httpRes) {{
            buckslipOrder = null;
        }};
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BuckslipOrder out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BuckslipOrder.class);
                res.buckslipOrder = out;
            }
        }

        return res;
    }
}