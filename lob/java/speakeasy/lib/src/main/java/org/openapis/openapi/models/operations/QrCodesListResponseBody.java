/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QrCodesListResponseBody - Returns a list of QR Codes and their analytics.
 */

public class QrCodesListResponseBody {
    /**
     * Value is resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object")
    public String object;

    public QrCodesListResponseBody withObject(String object) {
        this.object = object;
        return this;
    }
    
    /**
     * number of resources in a set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Long count;

    public QrCodesListResponseBody withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * Indicates the total number of records. Provided when the request specifies an "include" query parameter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_count")
    public Long totalCount;

    public QrCodesListResponseBody withTotalCount(Long totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    
    /**
     * Indicates the number of QR Codes out of `count` that were scanned atleast once.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scanned_count")
    public Long scannedCount;

    public QrCodesListResponseBody withScannedCount(Long scannedCount) {
        this.scannedCount = scannedCount;
        return this;
    }
    
    /**
     * List of QR code analytics
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public Data[] data;

    public QrCodesListResponseBody withData(Data[] data) {
        this.data = data;
        return this;
    }
    
    public QrCodesListResponseBody(){}
}
