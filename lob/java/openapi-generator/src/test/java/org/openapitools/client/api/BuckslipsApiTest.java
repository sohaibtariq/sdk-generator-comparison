/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.18
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddressesListBeforeAfterParameter;
import org.openapitools.client.model.Buckslip;
import org.openapitools.client.model.BuckslipDeletion;
import org.openapitools.client.model.BuckslipEditable;
import org.openapitools.client.model.BuckslipUpdatable;
import org.openapitools.client.model.BuckslipsList200Response;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BuckslipsApi
 */
@Disabled
public class BuckslipsApiTest {

    private final BuckslipsApi api = new BuckslipsApi();

    /**
     * Create
     *
     * Creates a new buckslip given information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void buckslipCreateTest() throws ApiException {
        BuckslipEditable buckslipEditable = null;
        Buckslip response = api.buckslipCreate(buckslipEditable);
        // TODO: test validations
    }

    /**
     * Delete
     *
     * Delete an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void buckslipDeleteTest() throws ApiException {
        String buckslipId = null;
        BuckslipDeletion response = api.buckslipDelete(buckslipId);
        // TODO: test validations
    }

    /**
     * Retrieve
     *
     * Retrieves the details of an existing buckslip. You need only supply the unique customer identifier that was returned upon buckslip creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void buckslipRetrieveTest() throws ApiException {
        String buckslipId = null;
        Buckslip response = api.buckslipRetrieve(buckslipId);
        // TODO: test validations
    }

    /**
     * Update
     *
     * Update the details of an existing buckslip. You need only supply the unique identifier that was returned upon buckslip creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void buckslipUpdateTest() throws ApiException {
        String buckslipId = null;
        BuckslipUpdatable buckslipUpdatable = null;
        Buckslip response = api.buckslipUpdate(buckslipId, buckslipUpdatable);
        // TODO: test validations
    }

    /**
     * List
     *
     * Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void buckslipsListTest() throws ApiException {
        Integer limit = null;
        AddressesListBeforeAfterParameter beforeAfter = null;
        List<String> include = null;
        BuckslipsList200Response response = api.buckslipsList(limit, beforeAfter, include);
        // TODO: test validations
    }

}
