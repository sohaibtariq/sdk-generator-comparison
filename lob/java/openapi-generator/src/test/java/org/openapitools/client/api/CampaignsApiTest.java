/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.18
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddressesListBeforeAfterParameter;
import org.openapitools.client.model.Campaign;
import org.openapitools.client.model.CampaignDelete200Response;
import org.openapitools.client.model.CampaignUpdatable;
import org.openapitools.client.model.CampaignWritable;
import org.openapitools.client.model.CampaignsList200Response;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignsApi
 */
@Disabled
public class CampaignsApiTest {

    private final CampaignsApi api = new CampaignsApi();

    /**
     * Create
     *
     * Creates a new campaign with the provided properties. See how to launch your first campaign [here](https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/launch-your-first-campaign).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void campaignCreateTest() throws ApiException {
        CampaignWritable campaignWritable = null;
        String xLangOutput = null;
        Campaign response = api.campaignCreate(campaignWritable, xLangOutput);
        // TODO: test validations
    }

    /**
     * Delete
     *
     * Delete an existing campaign. You need only supply the unique identifier that was returned upon campaign creation. Deleting a campaign also deletes any associated mail pieces that have been created but not sent. A campaign&#39;s &#x60;send_date&#x60; matches its associated mail pieces&#39; &#x60;send_date&#x60;s.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void campaignDeleteTest() throws ApiException {
        String cmpId = null;
        CampaignDelete200Response response = api.campaignDelete(cmpId);
        // TODO: test validations
    }

    /**
     * Retrieve
     *
     * Retrieves the details of an existing campaign. You need only supply the unique campaign identifier that was returned upon campaign creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void campaignRetrieveTest() throws ApiException {
        String cmpId = null;
        Campaign response = api.campaignRetrieve(cmpId);
        // TODO: test validations
    }

    /**
     * Send Campaign
     *
     * Sends a campaign. You need only supply the unique campaign identifier that was returned upon campaign creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void campaignSendTest() throws ApiException {
        String cmpId = null;
        Campaign response = api.campaignSend(cmpId);
        // TODO: test validations
    }

    /**
     * Update
     *
     * Update the details of an existing campaign. You need only supply the unique identifier that was returned upon campaign creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void campaignUpdateTest() throws ApiException {
        String cmpId = null;
        CampaignUpdatable campaignUpdatable = null;
        Campaign response = api.campaignUpdate(cmpId, campaignUpdatable);
        // TODO: test validations
    }

    /**
     * List
     *
     * Returns a list of your campaigns. The campaigns are returned sorted by creation date, with the most recently created campaigns appearing first.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void campaignsListTest() throws ApiException {
        Integer limit = null;
        List<String> include = null;
        AddressesListBeforeAfterParameter beforeAfter = null;
        CampaignsList200Response response = api.campaignsList(limit, include, beforeAfter);
        // TODO: test validations
    }

}
