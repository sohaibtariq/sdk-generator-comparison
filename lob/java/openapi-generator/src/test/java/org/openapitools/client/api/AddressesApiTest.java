/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.18
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.AddressDeletion;
import org.openapitools.client.model.AddressEditable;
import org.openapitools.client.model.AddressesList200Response;
import org.openapitools.client.model.AddressesListBeforeAfterParameter;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddressesApi
 */
@Disabled
public class AddressesApiTest {

    private final AddressesApi api = new AddressesApi();

    /**
     * Create
     *
     * Creates a new address given information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addressCreateTest() throws ApiException {
        AddressEditable addressEditable = null;
        Address response = api.addressCreate(addressEditable);
        // TODO: test validations
    }

    /**
     * Delete
     *
     * Deletes the details of an existing address. You need only supply the unique identifier that was returned upon address creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addressDeleteTest() throws ApiException {
        String adrId = null;
        AddressDeletion response = api.addressDelete(adrId);
        // TODO: test validations
    }

    /**
     * Retrieve
     *
     * Retrieves the details of an existing address. You need only supply the unique identifier that was returned upon address creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addressRetrieveTest() throws ApiException {
        String adrId = null;
        Address response = api.addressRetrieve(adrId);
        // TODO: test validations
    }

    /**
     * List
     *
     * Returns a list of your addresses. The addresses are returned sorted by creation date, with the most recently created addresses appearing first.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addressesListTest() throws ApiException {
        Integer limit = null;
        AddressesListBeforeAfterParameter beforeAfter = null;
        List<String> include = null;
        Map<String, String> dateCreated = null;
        Map<String, String> metadata = null;
        AddressesList200Response response = api.addressesList(limit, beforeAfter, include, dateCreated, metadata);
        // TODO: test validations
    }

}
