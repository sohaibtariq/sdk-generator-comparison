/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.18
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ExportRetrieve200Response;
import java.io.File;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.ReportRetrieve200Response;
import org.openapitools.client.model.ReportRetrieve403Response;
import org.openapitools.client.model.Upload;
import org.openapitools.client.model.UploadCreateExport;
import org.openapitools.client.model.UploadExportCreate4XXResponse;
import org.openapitools.client.model.UploadExportCreateRequest;
import org.openapitools.client.model.UploadFile;
import org.openapitools.client.model.UploadUpdatable;
import org.openapitools.client.model.UploadWritable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UploadsApi
 */
@Disabled
public class UploadsApiTest {

    private final UploadsApi api = new UploadsApi();

    /**
     * Retrieve Export
     *
     * Retrieves the details of an existing export. You need only supply the unique export identifier that was returned upon export creation. If you try retrieving an export immediately after creating one (i.e., before we&#39;re done processing the export), you will get back an export object with &#x60;state &#x3D; in_progress&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportRetrieveTest() throws ApiException {
        String uplId = null;
        String exId = null;
        ExportRetrieve200Response response = api.exportRetrieve(uplId, exId);
        // TODO: test validations
    }

    /**
     * Retrieve Line Item Report
     *
     * Retrieves the line item data for each row from the csv file associated with the upload id record. NOTE: This endpoint is currently feature flagged. Please reach out to Lob&#39;s support team if you  would like access to this API endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportRetrieveTest() throws ApiException {
        String uplId = null;
        String status = null;
        Integer limit = null;
        Integer offset = null;
        ReportRetrieve200Response response = api.reportRetrieve(uplId, status, limit, offset);
        // TODO: test validations
    }

    /**
     * Create
     *
     * Creates a new upload with the provided properties.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadCreateTest() throws ApiException {
        UploadWritable uploadWritable = null;
        Upload response = api.uploadCreate(uploadWritable);
        // TODO: test validations
    }

    /**
     * Delete
     *
     * Delete an existing upload. You need only supply the unique identifier that was returned upon upload creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadDeleteTest() throws ApiException {
        String uplId = null;
        api.uploadDelete(uplId);
        // TODO: test validations
    }

    /**
     * Create Export
     *
     * Campaign Exports can help you understand exactly which records in a campaign could not be created. By initiating and retrieving an export, you will get row-by-row errors for your campaign. For a step-by-step walkthrough of creating a campaign and exporting failures, see our [Campaigns Guide](https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/launch-your-first-campaign).  Create an export file associated with an upload.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadExportCreateTest() throws ApiException {
        String uplId = null;
        UploadExportCreateRequest uploadExportCreateRequest = null;
        UploadCreateExport response = api.uploadExportCreate(uplId, uploadExportCreateRequest);
        // TODO: test validations
    }

    /**
     * Upload file
     *
     * Upload an [audience file](https://help.lob.com/print-and-mail/building-a-mail-strategy/campaign-or-triggered-sends/campaign-audience-guide) and associate it with an upload.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadFileTest() throws ApiException {
        String uplId = null;
        File _file = null;
        UploadFile response = api.uploadFile(uplId, _file);
        // TODO: test validations
    }

    /**
     * Retrieve
     *
     * Retrieves the details of an existing upload. You need only supply the unique upload identifier that was returned upon upload creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadRetrieveTest() throws ApiException {
        String uplId = null;
        Upload response = api.uploadRetrieve(uplId);
        // TODO: test validations
    }

    /**
     * Update
     *
     * Update the details of an existing upload. You need only supply the unique identifier that was returned upon upload creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadUpdateTest() throws ApiException {
        String uplId = null;
        UploadUpdatable uploadUpdatable = null;
        Upload response = api.uploadUpdate(uplId, uploadUpdatable);
        // TODO: test validations
    }

    /**
     * List
     *
     * Returns a list of your uploads. Optionally, filter uploads by campaign.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadsListTest() throws ApiException {
        String campaignId = null;
        List<Upload> response = api.uploadsList(campaignId);
        // TODO: test validations
    }

}
