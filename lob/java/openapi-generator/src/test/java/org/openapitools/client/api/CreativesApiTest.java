/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.18
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Creative;
import org.openapitools.client.model.CreativeBase;
import org.openapitools.client.model.CreativeWritable;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CreativesApi
 */
@Disabled
public class CreativesApiTest {

    private final CreativesApi api = new CreativesApi();

    /**
     * Create
     *
     * Creates a new creative with the provided properties
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void creativeCreateTest() throws ApiException {
        CreativeWritable creativeWritable = null;
        String xLangOutput = null;
        Creative response = api.creativeCreate(creativeWritable, xLangOutput);
        // TODO: test validations
    }

    /**
     * Retrieve
     *
     * Retrieves the details of an existing creative. You need only supply the unique creative identifier that was returned upon creative creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void creativeRetrieveTest() throws ApiException {
        String crvId = null;
        Creative response = api.creativeRetrieve(crvId);
        // TODO: test validations
    }

    /**
     * Update
     *
     * Update the details of an existing creative. You need only supply the unique identifier that was returned upon creative creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void creativeUpdateTest() throws ApiException {
        String crvId = null;
        CreativeBase creativeBase = null;
        Creative response = api.creativeUpdate(crvId, creativeBase);
        // TODO: test validations
    }

}
