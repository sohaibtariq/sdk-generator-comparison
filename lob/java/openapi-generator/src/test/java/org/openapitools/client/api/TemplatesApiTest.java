/*
 * Lob
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> 
 *
 * The version of the OpenAPI document: 1.19.18
 * Contact: lob-openapi@lob.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddressesListBeforeAfterParameter;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Template;
import org.openapitools.client.model.TemplateDeletion;
import org.openapitools.client.model.TemplateUpdate;
import org.openapitools.client.model.TemplateWritable;
import org.openapitools.client.model.TemplatesList200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplatesApi
 */
@Disabled
public class TemplatesApiTest {

    private final TemplatesApi api = new TemplatesApi();

    /**
     * Create
     *
     * Creates a new template for use with the Print &amp; Mail API. In Live mode, you can only have as many non-deleted templates as allotted in your current &lt;a href&#x3D;\&quot;https://dashboard.lob.com/#/settings/editions\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Print &amp; Mail Edition&lt;/a&gt;. If you attempt to create a template past your limit, you will receive a &#x60;403&#x60; error. There is no limit in Test mode.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTemplateTest() throws ApiException {
        TemplateWritable templateWritable = null;
        Template response = api.createTemplate(templateWritable);
        // TODO: test validations
    }

    /**
     * Delete
     *
     * Permanently deletes a template. Deleting a template also deletes its associated versions. Deleted templates can not be used to create postcard, letter, or check resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void templateDeleteTest() throws ApiException {
        String tmplId = null;
        TemplateDeletion response = api.templateDelete(tmplId);
        // TODO: test validations
    }

    /**
     * Retrieve
     *
     * Retrieves the details of an existing template. You need only supply the unique template identifier that was returned upon template creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void templateRetrieveTest() throws ApiException {
        String tmplId = null;
        Template response = api.templateRetrieve(tmplId);
        // TODO: test validations
    }

    /**
     * Update
     *
     * Updates the description and/or published version of the template with the given id. To update the template&#39;s html, create a new version of the template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void templateUpdateTest() throws ApiException {
        String tmplId = null;
        TemplateUpdate templateUpdate = null;
        Template response = api.templateUpdate(tmplId, templateUpdate);
        // TODO: test validations
    }

    /**
     * List
     *
     * Returns a list of your templates. The templates are returned sorted by creation date, with the most recently created templates appearing first.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void templatesListTest() throws ApiException {
        Integer limit = null;
        AddressesListBeforeAfterParameter beforeAfter = null;
        List<String> include = null;
        Map<String, String> dateCreated = null;
        Map<String, String> metadata = null;
        TemplatesList200Response response = api.templatesList(limit, beforeAfter, include, dateCreated, metadata);
        // TODO: test validations
    }

}
