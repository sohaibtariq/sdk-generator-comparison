openapi: 3.1.0
info:
  title: Petstore
  summary: This API stores data about available pets
  description: The API enables users to view detailed information about a specific
    pet store and its available pets. The API can be used by pet owners, pet
    adoption agencies, and anyone looking for information about pets in a
    particular area.
  contact:
    name: APIMatic
    url: https://www.sdks.io/contact
    email: support@sdks.io
  version: 1.0.0
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
  - url: https://src8wr32cg.api.quickmocker.com
    variables: {}
    description: A petstore staging server
paths:
  /pets:
    post:
      tags:
        - pets
      summary: Create a new Pet object
      description: Create a pet and key characteristics
      parameters: []
      requestBody:
        description: A single Pet object used to create a new Pet
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
            example:
              id: 12345
              name: Indiana
              petType: dog
      responses:
        "201":
          description: Null response
          headers: {}
          content: {}
        default:
          description: unexpected error
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 101010
                message: Invalid pet type, only cat and dogs allowed
      deprecated: false
      operationId: createPet
    get:
      tags:
        - pets
      summary: list all the available pets
      description: List all pets
      operationId: listPets
      parameters:
        - name: limit
          in: query
          description: limit the number of objects returned to max 100
          style: form
          schema:
            maximum: 100
            type: integer
            contentEncoding: int32
          example: 10
      responses:
        "200":
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
              example:
                - id: 12345
                  name: Indiana
                  petType: dog
                - id: 56789
                  name: Shadow
                  petType: cat
        default:
          description: unexpected error
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 101010
                message: Invalid pet type, only cat and dogs allowed
      deprecated: false
    parameters: []
  "/pets/{petId}":
    get:
      tags:
        - pets
      summary: showPetById
      description: Info for a specific pet
      operationId: showPetById
      parameters:
        - name: petId
          in: path
          description: The id of the pet to retrieve
          required: true
          schema:
            type: string
          example: "33918"
      responses:
        "200":
          description: Expected response to a valid request
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              example:
                id: 12345
                name: Cody
                petType: dog
        default:
          description: unexpected error
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 101010
                message: Invalid pet type, only cat and dogs allowed
      deprecated: false
    parameters: []
components:
  schemas:
    Pet:
      title: Pet
      description: A single Pet object
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: a unique identifier for a Pet
          contentEncoding: int64
          example: 1234
        name:
          type: string
          description: the name lovingly given to the pet
          example: Fido
        petType:
          $ref: "#/components/schemas/PetPetType"
      example:
        id: 123
        name: Cody
        petType: dog
    Error:
      title: Error
      description: An error object
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          description: An error code for understanding the error which occured
          contentEncoding: int32
          example: 101010
        message:
          type: string
          description: Error message that provides human readable details about the error.
          example: Invalid pet type, only cat and dogs allowed
      example:
        code: 101010
        message: Invalid pet type
    Pets:
      maxItems: 100
      type: array
      items:
        $ref: "#/components/schemas/Pet"
      description: "array of pet objects"
      contentMediaType: application/json
      example:
        - id: 10101
          name: indiana
          petType: cat
    PetPetType:
      type: string
      description: the type of pets allowed
      enum:
        - dog
        - cat
      example: dog
  securitySchemes:
    bearerAuth:
      type: http
      description: bearer token security
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: pets
    description: the pet tag for grouping similar methods
