/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.lob.api.DateTimeHelper;
import com.lob.api.models.containers.Address;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for LetterGeneratedBase type.
 */
public class LetterGeneratedBase {
    private Address to;
    private String carrier;
    private List<Thumbnail> thumbnails;
    private LocalDate expectedDeliveryDate;
    private LocalDateTime dateCreated;
    private LocalDateTime dateModified;
    private Boolean deleted;
    private Address from;
    private String url;
    private String id;
    private String templateId;
    private String templateVersionId;
    private OptionalNullable<String> campaignId;
    private LtrUseTypeEnum useType;
    private Boolean fsc;
    private TheStatusOfTheLetterEnum status;
    private OptionalNullable<String> failureReason;
    private Object8Enum object;

    /**
     * Default constructor.
     */
    public LetterGeneratedBase() {
        carrier = "USPS";
        fsc = false;
        object = Object8Enum.LETTER;
    }

    /**
     * Initialization constructor.
     * @param  to  Address value for to.
     * @param  carrier  String value for carrier.
     * @param  from  Address value for from.
     * @param  id  String value for id.
     * @param  useType  LtrUseTypeEnum value for useType.
     * @param  thumbnails  List of Thumbnail value for thumbnails.
     * @param  expectedDeliveryDate  LocalDate value for expectedDeliveryDate.
     * @param  dateCreated  LocalDateTime value for dateCreated.
     * @param  dateModified  LocalDateTime value for dateModified.
     * @param  deleted  Boolean value for deleted.
     * @param  url  String value for url.
     * @param  templateId  String value for templateId.
     * @param  templateVersionId  String value for templateVersionId.
     * @param  campaignId  String value for campaignId.
     * @param  fsc  Boolean value for fsc.
     * @param  status  TheStatusOfTheLetterEnum value for status.
     * @param  failureReason  String value for failureReason.
     * @param  object  Object8Enum value for object.
     */
    public LetterGeneratedBase(
            Address to,
            String carrier,
            Address from,
            String id,
            LtrUseTypeEnum useType,
            List<Thumbnail> thumbnails,
            LocalDate expectedDeliveryDate,
            LocalDateTime dateCreated,
            LocalDateTime dateModified,
            Boolean deleted,
            String url,
            String templateId,
            String templateVersionId,
            String campaignId,
            Boolean fsc,
            TheStatusOfTheLetterEnum status,
            String failureReason,
            Object8Enum object) {
        this.to = to;
        this.carrier = carrier;
        this.thumbnails = thumbnails;
        this.expectedDeliveryDate = expectedDeliveryDate;
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.deleted = deleted;
        this.from = from;
        this.url = url;
        this.id = id;
        this.templateId = templateId;
        this.templateVersionId = templateVersionId;
        this.campaignId = OptionalNullable.of(campaignId);
        this.useType = useType;
        this.fsc = fsc;
        this.status = status;
        this.failureReason = OptionalNullable.of(failureReason);
        this.object = object;
    }

    /**
     * Initialization constructor.
     * @param  to  Address value for to.
     * @param  carrier  String value for carrier.
     * @param  from  Address value for from.
     * @param  id  String value for id.
     * @param  useType  LtrUseTypeEnum value for useType.
     * @param  thumbnails  List of Thumbnail value for thumbnails.
     * @param  expectedDeliveryDate  LocalDate value for expectedDeliveryDate.
     * @param  dateCreated  LocalDateTime value for dateCreated.
     * @param  dateModified  LocalDateTime value for dateModified.
     * @param  deleted  Boolean value for deleted.
     * @param  url  String value for url.
     * @param  templateId  String value for templateId.
     * @param  templateVersionId  String value for templateVersionId.
     * @param  campaignId  String value for campaignId.
     * @param  fsc  Boolean value for fsc.
     * @param  status  TheStatusOfTheLetterEnum value for status.
     * @param  failureReason  String value for failureReason.
     * @param  object  Object8Enum value for object.
     */

    protected LetterGeneratedBase(Address to, String carrier, Address from, String id,
            LtrUseTypeEnum useType, List<Thumbnail> thumbnails, LocalDate expectedDeliveryDate,
            LocalDateTime dateCreated, LocalDateTime dateModified, Boolean deleted, String url,
            String templateId, String templateVersionId, OptionalNullable<String> campaignId,
            Boolean fsc, TheStatusOfTheLetterEnum status, OptionalNullable<String> failureReason,
            Object8Enum object) {
        this.to = to;
        this.carrier = carrier;
        this.thumbnails = thumbnails;
        this.expectedDeliveryDate = expectedDeliveryDate;
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.deleted = deleted;
        this.from = from;
        this.url = url;
        this.id = id;
        this.templateId = templateId;
        this.templateVersionId = templateVersionId;
        this.campaignId = campaignId;
        this.useType = useType;
        this.fsc = fsc;
        this.status = status;
        this.failureReason = failureReason;
        this.object = object;
    }

    /**
     * Getter for To.
     * @return Returns the Address
     */
    @JsonGetter("to")
    public Address getTo() {
        return to;
    }

    /**
     * Setter for To.
     * @param to Value for Address
     */
    @JsonSetter("to")
    public void setTo(Address to) {
        this.to = to;
    }

    /**
     * Getter for Carrier.
     * @return Returns the String
     */
    @JsonGetter("carrier")
    public String getCarrier() {
        return carrier;
    }

    /**
     * Setter for Carrier.
     * @param carrier Value for String
     */
    @JsonSetter("carrier")
    private void setCarrier(String carrier) {
        this.carrier = carrier;
    }

    /**
     * Getter for Thumbnails.
     * @return Returns the List of Thumbnail
     */
    @JsonGetter("thumbnails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Thumbnail> getThumbnails() {
        return thumbnails;
    }

    /**
     * Setter for Thumbnails.
     * @param thumbnails Value for List of Thumbnail
     */
    @JsonSetter("thumbnails")
    public void setThumbnails(List<Thumbnail> thumbnails) {
        this.thumbnails = thumbnails;
    }

    /**
     * Getter for ExpectedDeliveryDate.
     * A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its
     * `send_date`.
     * @return Returns the LocalDate
     */
    @JsonGetter("expected_delivery_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getExpectedDeliveryDate() {
        return expectedDeliveryDate;
    }

    /**
     * Setter for ExpectedDeliveryDate.
     * A date in YYYY-MM-DD format of the mailpiece's expected delivery date based on its
     * `send_date`.
     * @param expectedDeliveryDate Value for LocalDate
     */
    @JsonSetter("expected_delivery_date")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setExpectedDeliveryDate(LocalDate expectedDeliveryDate) {
        this.expectedDeliveryDate = expectedDeliveryDate;
    }

    /**
     * Getter for DateCreated.
     * A timestamp in ISO 8601 format of the date the resource was created.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("date_created")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateCreated() {
        return dateCreated;
    }

    /**
     * Setter for DateCreated.
     * A timestamp in ISO 8601 format of the date the resource was created.
     * @param dateCreated Value for LocalDateTime
     */
    @JsonSetter("date_created")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateCreated(LocalDateTime dateCreated) {
        this.dateCreated = dateCreated;
    }

    /**
     * Getter for DateModified.
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("date_modified")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateModified() {
        return dateModified;
    }

    /**
     * Setter for DateModified.
     * A timestamp in ISO 8601 format of the date the resource was last modified.
     * @param dateModified Value for LocalDateTime
     */
    @JsonSetter("date_modified")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateModified(LocalDateTime dateModified) {
        this.dateModified = dateModified;
    }

    /**
     * Getter for Deleted.
     * Only returned if the resource has been successfully deleted.
     * @return Returns the Boolean
     */
    @JsonGetter("deleted")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getDeleted() {
        return deleted;
    }

    /**
     * Setter for Deleted.
     * Only returned if the resource has been successfully deleted.
     * @param deleted Value for Boolean
     */
    @JsonSetter("deleted")
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * Getter for From.
     * @return Returns the Address
     */
    @JsonGetter("from")
    public Address getFrom() {
        return from;
    }

    /**
     * Setter for From.
     * @param from Value for Address
     */
    @JsonSetter("from")
    public void setFrom(Address from) {
        this.from = from;
    }

    /**
     * Getter for Url.
     * A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30
     * days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be
     * generated.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * A [signed link](#section/Asset-URLs) served over HTTPS. The link returned will expire in 30
     * days to prevent mis-sharing. Each time a GET request is initiated, a new signed URL will be
     * generated.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Id.
     * Unique identifier prefixed with `ltr_`.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier prefixed with `ltr_`.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for TemplateId.
     * @return Returns the String
     */
    @JsonGetter("template_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTemplateId() {
        return templateId;
    }

    /**
     * Setter for TemplateId.
     * @param templateId Value for String
     */
    @JsonSetter("template_id")
    public void setTemplateId(String templateId) {
        this.templateId = templateId;
    }

    /**
     * Getter for TemplateVersionId.
     * @return Returns the String
     */
    @JsonGetter("template_version_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTemplateVersionId() {
        return templateVersionId;
    }

    /**
     * Setter for TemplateVersionId.
     * @param templateVersionId Value for String
     */
    @JsonSetter("template_version_id")
    public void setTemplateVersionId(String templateVersionId) {
        this.templateVersionId = templateVersionId;
    }

    /**
     * Internal Getter for CampaignId.
     * The unique ID of the associated campaign if the resource was generated from a campaign.
     * @return Returns the Internal String
     */
    @JsonGetter("campaign_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCampaignId() {
        return this.campaignId;
    }

    /**
     * Getter for CampaignId.
     * The unique ID of the associated campaign if the resource was generated from a campaign.
     * @return Returns the String
     */
    public String getCampaignId() {
        return OptionalNullable.getFrom(campaignId);
    }

    /**
     * Setter for CampaignId.
     * The unique ID of the associated campaign if the resource was generated from a campaign.
     * @param campaignId Value for String
     */
    @JsonSetter("campaign_id")
    public void setCampaignId(String campaignId) {
        this.campaignId = OptionalNullable.of(campaignId);
    }

    /**
     * UnSetter for CampaignId.
     * The unique ID of the associated campaign if the resource was generated from a campaign.
     */
    public void unsetCampaignId() {
        campaignId = null;
    }

    /**
     * Getter for UseType.
     * The use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type
     * is only allowed if an account default use_type is selected in Account Settings. For more
     * information on use_type, see our [Help Center
     * article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type).
     * @return Returns the LtrUseTypeEnum
     */
    @JsonGetter("use_type")
    public LtrUseTypeEnum getUseType() {
        return useType;
    }

    /**
     * Setter for UseType.
     * The use type for each mailpiece. Can be one of marketing, operational, or null. Null use_type
     * is only allowed if an account default use_type is selected in Account Settings. For more
     * information on use_type, see our [Help Center
     * article](https://help.lob.com/print-and-mail/building-a-mail-strategy/managing-mail-settings/declaring-mail-use-type).
     * @param useType Value for LtrUseTypeEnum
     */
    @JsonSetter("use_type")
    public void setUseType(LtrUseTypeEnum useType) {
        this.useType = useType;
    }

    /**
     * Getter for Fsc.
     * This is in beta. Contact support{@literal @}lob.com or your account contact to learn more. Not available
     * for `A4` letter size.
     * @return Returns the Boolean
     */
    @JsonGetter("fsc")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getFsc() {
        return fsc;
    }

    /**
     * Setter for Fsc.
     * This is in beta. Contact support{@literal @}lob.com or your account contact to learn more. Not available
     * for `A4` letter size.
     * @param fsc Value for Boolean
     */
    @JsonSetter("fsc")
    public void setFsc(Boolean fsc) {
        this.fsc = fsc;
    }

    /**
     * Getter for Status.
     * @return Returns the TheStatusOfTheLetterEnum
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TheStatusOfTheLetterEnum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for TheStatusOfTheLetterEnum
     */
    @JsonSetter("status")
    public void setStatus(TheStatusOfTheLetterEnum status) {
        this.status = status;
    }

    /**
     * Internal Getter for FailureReason.
     * A string describing the reason for failure if the letter failed to render.
     * @return Returns the Internal String
     */
    @JsonGetter("failure_reason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFailureReason() {
        return this.failureReason;
    }

    /**
     * Getter for FailureReason.
     * A string describing the reason for failure if the letter failed to render.
     * @return Returns the String
     */
    public String getFailureReason() {
        return OptionalNullable.getFrom(failureReason);
    }

    /**
     * Setter for FailureReason.
     * A string describing the reason for failure if the letter failed to render.
     * @param failureReason Value for String
     */
    @JsonSetter("failure_reason")
    public void setFailureReason(String failureReason) {
        this.failureReason = OptionalNullable.of(failureReason);
    }

    /**
     * UnSetter for FailureReason.
     * A string describing the reason for failure if the letter failed to render.
     */
    public void unsetFailureReason() {
        failureReason = null;
    }

    /**
     * Getter for Object.
     * Value is resource type.
     * @return Returns the Object8Enum
     */
    @JsonGetter("object")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object8Enum getObject() {
        return object;
    }

    /**
     * Setter for Object.
     * Value is resource type.
     * @param object Value for Object8Enum
     */
    @JsonSetter("object")
    public void setObject(Object8Enum object) {
        this.object = object;
    }

    /**
     * Converts this LetterGeneratedBase into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LetterGeneratedBase [" + "to=" + to + ", carrier=" + carrier + ", from=" + from
                + ", id=" + id + ", useType=" + useType + ", thumbnails=" + thumbnails
                + ", expectedDeliveryDate=" + expectedDeliveryDate + ", dateCreated=" + dateCreated
                + ", dateModified=" + dateModified + ", deleted=" + deleted + ", url=" + url
                + ", templateId=" + templateId + ", templateVersionId=" + templateVersionId
                + ", campaignId=" + campaignId + ", fsc=" + fsc + ", status=" + status
                + ", failureReason=" + failureReason + ", object=" + object + "]";
    }

    /**
     * Builds a new {@link LetterGeneratedBase.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LetterGeneratedBase.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(to, carrier, from, id, useType)
                .thumbnails(getThumbnails())
                .expectedDeliveryDate(getExpectedDeliveryDate())
                .dateCreated(getDateCreated())
                .dateModified(getDateModified())
                .deleted(getDeleted())
                .url(getUrl())
                .templateId(getTemplateId())
                .templateVersionId(getTemplateVersionId())
                .fsc(getFsc())
                .status(getStatus())
                .object(getObject());
        builder.campaignId = internalGetCampaignId();
        builder.failureReason = internalGetFailureReason();
        return builder;
    }

    /**
     * Class to build instances of {@link LetterGeneratedBase}.
     */
    public static class Builder {
        private Address to;
        private String carrier = "USPS";
        private Address from;
        private String id;
        private LtrUseTypeEnum useType;
        private List<Thumbnail> thumbnails;
        private LocalDate expectedDeliveryDate;
        private LocalDateTime dateCreated;
        private LocalDateTime dateModified;
        private Boolean deleted;
        private String url;
        private String templateId;
        private String templateVersionId;
        private OptionalNullable<String> campaignId;
        private Boolean fsc = false;
        private TheStatusOfTheLetterEnum status;
        private OptionalNullable<String> failureReason;
        private Object8Enum object = Object8Enum.LETTER;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  to  Address value for to.
         * @param  carrier  String value for carrier.
         * @param  from  Address value for from.
         * @param  id  String value for id.
         * @param  useType  LtrUseTypeEnum value for useType.
         */
        public Builder(Address to, String carrier, Address from, String id,
                LtrUseTypeEnum useType) {
            this.to = to;
            this.carrier = carrier;
            this.from = from;
            this.id = id;
            this.useType = useType;
        }

        /**
         * Setter for to.
         * @param  to  Address value for to.
         * @return Builder
         */
        public Builder to(Address to) {
            this.to = to;
            return this;
        }

        /**
         * Setter for carrier.
         * @param  carrier  String value for carrier.
         * @return Builder
         */
        public Builder carrier(String carrier) {
            this.carrier = carrier;
            return this;
        }

        /**
         * Setter for from.
         * @param  from  Address value for from.
         * @return Builder
         */
        public Builder from(Address from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for useType.
         * @param  useType  LtrUseTypeEnum value for useType.
         * @return Builder
         */
        public Builder useType(LtrUseTypeEnum useType) {
            this.useType = useType;
            return this;
        }

        /**
         * Setter for thumbnails.
         * @param  thumbnails  List of Thumbnail value for thumbnails.
         * @return Builder
         */
        public Builder thumbnails(List<Thumbnail> thumbnails) {
            this.thumbnails = thumbnails;
            return this;
        }

        /**
         * Setter for expectedDeliveryDate.
         * @param  expectedDeliveryDate  LocalDate value for expectedDeliveryDate.
         * @return Builder
         */
        public Builder expectedDeliveryDate(LocalDate expectedDeliveryDate) {
            this.expectedDeliveryDate = expectedDeliveryDate;
            return this;
        }

        /**
         * Setter for dateCreated.
         * @param  dateCreated  LocalDateTime value for dateCreated.
         * @return Builder
         */
        public Builder dateCreated(LocalDateTime dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }

        /**
         * Setter for dateModified.
         * @param  dateModified  LocalDateTime value for dateModified.
         * @return Builder
         */
        public Builder dateModified(LocalDateTime dateModified) {
            this.dateModified = dateModified;
            return this;
        }

        /**
         * Setter for deleted.
         * @param  deleted  Boolean value for deleted.
         * @return Builder
         */
        public Builder deleted(Boolean deleted) {
            this.deleted = deleted;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for templateId.
         * @param  templateId  String value for templateId.
         * @return Builder
         */
        public Builder templateId(String templateId) {
            this.templateId = templateId;
            return this;
        }

        /**
         * Setter for templateVersionId.
         * @param  templateVersionId  String value for templateVersionId.
         * @return Builder
         */
        public Builder templateVersionId(String templateVersionId) {
            this.templateVersionId = templateVersionId;
            return this;
        }

        /**
         * Setter for campaignId.
         * @param  campaignId  String value for campaignId.
         * @return Builder
         */
        public Builder campaignId(String campaignId) {
            this.campaignId = OptionalNullable.of(campaignId);
            return this;
        }

        /**
         * UnSetter for campaignId.
         * @return Builder
         */
        public Builder unsetCampaignId() {
            campaignId = null;
            return this;
        }

        /**
         * Setter for fsc.
         * @param  fsc  Boolean value for fsc.
         * @return Builder
         */
        public Builder fsc(Boolean fsc) {
            this.fsc = fsc;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  TheStatusOfTheLetterEnum value for status.
         * @return Builder
         */
        public Builder status(TheStatusOfTheLetterEnum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for failureReason.
         * @param  failureReason  String value for failureReason.
         * @return Builder
         */
        public Builder failureReason(String failureReason) {
            this.failureReason = OptionalNullable.of(failureReason);
            return this;
        }

        /**
         * UnSetter for failureReason.
         * @return Builder
         */
        public Builder unsetFailureReason() {
            failureReason = null;
            return this;
        }

        /**
         * Setter for object.
         * @param  object  Object8Enum value for object.
         * @return Builder
         */
        public Builder object(Object8Enum object) {
            this.object = object;
            return this;
        }

        /**
         * Builds a new {@link LetterGeneratedBase} object using the set fields.
         * @return {@link LetterGeneratedBase}
         */
        public LetterGeneratedBase build() {
            return new LetterGeneratedBase(to, carrier, from, id, useType, thumbnails,
                    expectedDeliveryDate, dateCreated, dateModified, deleted, url, templateId,
                    templateVersionId, campaignId, fsc, status, failureReason, object);
        }
    }
}
