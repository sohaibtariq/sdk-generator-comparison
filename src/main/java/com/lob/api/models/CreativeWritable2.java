/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.lob.api.models.containers.CrvInside;
import com.lob.api.models.containers.CrvOutside;
import com.lob.api.models.containers.FromAttribute;
import io.apimatic.core.types.OptionalNullable;
import java.util.Map;

/**
 * This is a model class for CreativeWritable2 type.
 */
public class CreativeWritable2 {
    private String resourceType;
    private String campaignId;
    private CrvInside inside;
    private CrvOutside outside;
    private SelfMailerDetailsWritable details;
    private FromAttribute from;
    private OptionalNullable<String> description;
    private Map<String, String> metadata;

    /**
     * Default constructor.
     */
    public CreativeWritable2() {
        resourceType = "self_mailer";
    }

    /**
     * Initialization constructor.
     * @param  resourceType  String value for resourceType.
     * @param  campaignId  String value for campaignId.
     * @param  inside  CrvInside value for inside.
     * @param  outside  CrvOutside value for outside.
     * @param  details  SelfMailerDetailsWritable value for details.
     * @param  from  FromAttribute value for from.
     * @param  description  String value for description.
     * @param  metadata  Map of String, value for metadata.
     */
    public CreativeWritable2(
            String resourceType,
            String campaignId,
            CrvInside inside,
            CrvOutside outside,
            SelfMailerDetailsWritable details,
            FromAttribute from,
            String description,
            Map<String, String> metadata) {
        this.resourceType = resourceType;
        this.campaignId = campaignId;
        this.inside = inside;
        this.outside = outside;
        this.details = details;
        this.from = from;
        this.description = OptionalNullable.of(description);
        this.metadata = metadata;
    }

    /**
     * Initialization constructor.
     * @param  resourceType  String value for resourceType.
     * @param  campaignId  String value for campaignId.
     * @param  inside  CrvInside value for inside.
     * @param  outside  CrvOutside value for outside.
     * @param  details  SelfMailerDetailsWritable value for details.
     * @param  from  FromAttribute value for from.
     * @param  description  String value for description.
     * @param  metadata  Map of String, value for metadata.
     */

    protected CreativeWritable2(String resourceType, String campaignId, CrvInside inside,
            CrvOutside outside, SelfMailerDetailsWritable details, FromAttribute from,
            OptionalNullable<String> description, Map<String, String> metadata) {
        this.resourceType = resourceType;
        this.campaignId = campaignId;
        this.inside = inside;
        this.outside = outside;
        this.details = details;
        this.from = from;
        this.description = description;
        this.metadata = metadata;
    }

    /**
     * Initialization constructor.
     * @param  resourceType  String value for resourceType.
     * @param  campaignId  String value for campaignId.
     * @param  inside  CrvInside value for inside.
     * @param  outside  CrvOutside value for outside.
     * @param  details  SelfMailerDetailsWritable value for details.
     */
    @JsonCreator
    protected CreativeWritable2(
            @JsonProperty("resource_type") String resourceType,
            @JsonProperty("campaign_id") String campaignId,
            @JsonProperty("inside") CrvInside inside,
            @JsonProperty("outside") CrvOutside outside,
            @JsonProperty("details") SelfMailerDetailsWritable details) {
        this(resourceType, campaignId, inside, outside, details, null, OptionalNullable.of(null),
                null);
        unsetDescription();
    }

    /**
     * Getter for ResourceType.
     * Mailpiece type for the creative
     * @return Returns the String
     */
    @JsonGetter("resource_type")
    public String getResourceType() {
        return resourceType;
    }

    /**
     * Setter for ResourceType.
     * Mailpiece type for the creative
     * @param resourceType Value for String
     */
    @JsonSetter("resource_type")
    private void setResourceType(String resourceType) {
        this.resourceType = resourceType;
    }

    /**
     * Getter for CampaignId.
     * Unique identifier prefixed with `cmp_`.
     * @return Returns the String
     */
    @JsonGetter("campaign_id")
    public String getCampaignId() {
        return campaignId;
    }

    /**
     * Setter for CampaignId.
     * Unique identifier prefixed with `cmp_`.
     * @param campaignId Value for String
     */
    @JsonSetter("campaign_id")
    public void setCampaignId(String campaignId) {
        this.campaignId = campaignId;
    }

    /**
     * Getter for Inside.
     * The artwork to use as the inside of your self mailer creative. Notes: - HTML merge variables
     * should not include delimiting whitespace. - PDF, PNG, and JPGs must be sized at 6.25"x18.25",
     * 12.25"x9.25" or 11.25"x9.25" at 300 DPI, while supplied HTML template will be rendered to the
     * specified `size`. - Be sure to leave room for address and postage information by following
     * the templates provided here: - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_bifold_template.pdf"
     * target="_blank"&gt;6x18 bifold template&lt;/a&gt; - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/11x9_sfm_bifold_template.pdf"
     * target="_blank"&gt;11x9 bifold template&lt;/a&gt; - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/12x9_sfm_bifold_template.pdf"
     * target="_blank"&gt;12x9 bifold template&lt;/a&gt; See [here](#section/HTML-Examples) for HTML
     * examples.
     * @return Returns the CrvInside
     */
    @JsonGetter("inside")
    public CrvInside getInside() {
        return inside;
    }

    /**
     * Setter for Inside.
     * The artwork to use as the inside of your self mailer creative. Notes: - HTML merge variables
     * should not include delimiting whitespace. - PDF, PNG, and JPGs must be sized at 6.25"x18.25",
     * 12.25"x9.25" or 11.25"x9.25" at 300 DPI, while supplied HTML template will be rendered to the
     * specified `size`. - Be sure to leave room for address and postage information by following
     * the templates provided here: - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_bifold_template.pdf"
     * target="_blank"&gt;6x18 bifold template&lt;/a&gt; - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/11x9_sfm_bifold_template.pdf"
     * target="_blank"&gt;11x9 bifold template&lt;/a&gt; - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/12x9_sfm_bifold_template.pdf"
     * target="_blank"&gt;12x9 bifold template&lt;/a&gt; See [here](#section/HTML-Examples) for HTML
     * examples.
     * @param inside Value for CrvInside
     */
    @JsonSetter("inside")
    public void setInside(CrvInside inside) {
        this.inside = inside;
    }

    /**
     * Getter for Outside.
     * The artwork to use as the outside of your self mailer creative. Notes: - HTML merge variables
     * should not include delimiting whitespace. - PDF, PNG, and JPGs must be sized at 6.25"x18.25",
     * 12.25"x9.25" or 11.25"x9.25" at 300 DPI, while supplied HTML template will be rendered to the
     * specified `size`. - Be sure to leave room for address and postage information by following
     * the templates provided here: - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_bifold_template.pdf"
     * target="_blank"&gt;6x18 bifold template&lt;/a&gt; - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/11x9_sfm_bifold_template.pdf"
     * target="_blank"&gt;11x9 bifold template&lt;/a&gt; - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/12x9_sfm_bifold_template.pdf"
     * target="_blank"&gt;12x9 bifold template&lt;/a&gt; See [here](#section/HTML-Examples) for HTML
     * examples.
     * @return Returns the CrvOutside
     */
    @JsonGetter("outside")
    public CrvOutside getOutside() {
        return outside;
    }

    /**
     * Setter for Outside.
     * The artwork to use as the outside of your self mailer creative. Notes: - HTML merge variables
     * should not include delimiting whitespace. - PDF, PNG, and JPGs must be sized at 6.25"x18.25",
     * 12.25"x9.25" or 11.25"x9.25" at 300 DPI, while supplied HTML template will be rendered to the
     * specified `size`. - Be sure to leave room for address and postage information by following
     * the templates provided here: - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_bifold_template.pdf"
     * target="_blank"&gt;6x18 bifold template&lt;/a&gt; - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/11x9_sfm_bifold_template.pdf"
     * target="_blank"&gt;11x9 bifold template&lt;/a&gt; - &lt;a
     * href="https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/12x9_sfm_bifold_template.pdf"
     * target="_blank"&gt;12x9 bifold template&lt;/a&gt; See [here](#section/HTML-Examples) for HTML
     * examples.
     * @param outside Value for CrvOutside
     */
    @JsonSetter("outside")
    public void setOutside(CrvOutside outside) {
        this.outside = outside;
    }

    /**
     * Getter for Details.
     * Properties that the self mailers in your Creative should have. Check within in order to add a
     * QR code to your creative.
     * @return Returns the SelfMailerDetailsWritable
     */
    @JsonGetter("details")
    public SelfMailerDetailsWritable getDetails() {
        return details;
    }

    /**
     * Setter for Details.
     * Properties that the self mailers in your Creative should have. Check within in order to add a
     * QR code to your creative.
     * @param details Value for SelfMailerDetailsWritable
     */
    @JsonSetter("details")
    public void setDetails(SelfMailerDetailsWritable details) {
        this.details = details;
    }

    /**
     * Getter for From.
     * Must either be an address ID or an inline object with correct address parameters. All
     * addresses will be standardized into uppercase without being modified by verification.
     * @return Returns the FromAttribute
     */
    @JsonGetter("from")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FromAttribute getFrom() {
        return from;
    }

    /**
     * Setter for From.
     * Must either be an address ID or an inline object with correct address parameters. All
     * addresses will be standardized into uppercase without being modified by verification.
     * @param from Value for FromAttribute
     */
    @JsonSetter("from")
    public void setFrom(FromAttribute from) {
        this.from = from;
    }

    /**
     * Internal Getter for Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * @return Returns the Internal String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDescription() {
        return this.description;
    }

    /**
     * Getter for Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * @return Returns the String
     */
    public String getDescription() {
        return OptionalNullable.getFrom(description);
    }

    /**
     * Setter for Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = OptionalNullable.of(description);
    }

    /**
     * UnSetter for Description.
     * An internal description that identifies this resource. Must be no longer than 255 characters.
     */
    public void unsetDescription() {
        description = null;
    }

    /**
     * Getter for Metadata.
     * Use metadata to store custom information for tagging and labeling back to your internal
     * systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters
     * and values must be at most 500 characters. Neither can contain the characters `"` and `\`.
     * i.e. '{"customer_id" : "NEWYORK2015"}' Nested objects are not supported. See
     * [Metadata](#section/Metadata) for more information.
     * @return Returns the Map of String, String
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Use metadata to store custom information for tagging and labeling back to your internal
     * systems. Must be an object with up to 20 key-value pairs. Keys must be at most 40 characters
     * and values must be at most 500 characters. Neither can contain the characters `"` and `\`.
     * i.e. '{"customer_id" : "NEWYORK2015"}' Nested objects are not supported. See
     * [Metadata](#section/Metadata) for more information.
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Converts this CreativeWritable2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreativeWritable2 [" + "resourceType=" + resourceType + ", campaignId=" + campaignId
                + ", inside=" + inside + ", outside=" + outside + ", details=" + details + ", from="
                + from + ", description=" + description + ", metadata=" + metadata + "]";
    }

    /**
     * Builds a new {@link CreativeWritable2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreativeWritable2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(resourceType, campaignId, inside, outside, details)
                .from(getFrom())
                .metadata(getMetadata());
        builder.description = internalGetDescription();
        return builder;
    }

    /**
     * Class to build instances of {@link CreativeWritable2}.
     */
    public static class Builder {
        private String resourceType = "self_mailer";
        private String campaignId;
        private CrvInside inside;
        private CrvOutside outside;
        private SelfMailerDetailsWritable details;
        private FromAttribute from;
        private OptionalNullable<String> description;
        private Map<String, String> metadata;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  resourceType  String value for resourceType.
         * @param  campaignId  String value for campaignId.
         * @param  inside  CrvInside value for inside.
         * @param  outside  CrvOutside value for outside.
         * @param  details  SelfMailerDetailsWritable value for details.
         */
        public Builder(String resourceType, String campaignId, CrvInside inside, CrvOutside outside,
                SelfMailerDetailsWritable details) {
            this.resourceType = resourceType;
            this.campaignId = campaignId;
            this.inside = inside;
            this.outside = outside;
            this.details = details;
        }

        /**
         * Setter for resourceType.
         * @param  resourceType  String value for resourceType.
         * @return Builder
         */
        public Builder resourceType(String resourceType) {
            this.resourceType = resourceType;
            return this;
        }

        /**
         * Setter for campaignId.
         * @param  campaignId  String value for campaignId.
         * @return Builder
         */
        public Builder campaignId(String campaignId) {
            this.campaignId = campaignId;
            return this;
        }

        /**
         * Setter for inside.
         * @param  inside  CrvInside value for inside.
         * @return Builder
         */
        public Builder inside(CrvInside inside) {
            this.inside = inside;
            return this;
        }

        /**
         * Setter for outside.
         * @param  outside  CrvOutside value for outside.
         * @return Builder
         */
        public Builder outside(CrvOutside outside) {
            this.outside = outside;
            return this;
        }

        /**
         * Setter for details.
         * @param  details  SelfMailerDetailsWritable value for details.
         * @return Builder
         */
        public Builder details(SelfMailerDetailsWritable details) {
            this.details = details;
            return this;
        }

        /**
         * Setter for from.
         * @param  from  FromAttribute value for from.
         * @return Builder
         */
        public Builder from(FromAttribute from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = OptionalNullable.of(description);
            return this;
        }

        /**
         * UnSetter for description.
         * @return Builder
         */
        public Builder unsetDescription() {
            description = null;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Builds a new {@link CreativeWritable2} object using the set fields.
         * @return {@link CreativeWritable2}
         */
        public CreativeWritable2 build() {
            return new CreativeWritable2(resourceType, campaignId, inside, outside, details, from,
                    description, metadata);
        }
    }
}
