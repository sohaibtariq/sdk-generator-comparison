/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.lob.api.ApiHelper;
import com.lob.api.models.Error;
import com.lob.api.models.IntlVerification;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = IntlVerificationsAddresses.IntlVerificationsAddressesDeserializer.class)
public abstract class IntlVerificationsAddresses {
    
    /**
     * This is intl_verification case.
     * @param intlVerification IntlVerification value for intlVerification.
     * @return The IntlVerificationCase object.
     */
    public static IntlVerificationsAddresses fromIntlVerification(
            IntlVerification intlVerification) {
        return intlVerification == null ? null : new IntlVerificationCase(intlVerification);
    }

    /**
     * This is error case.
     * @param error Error value for error.
     * @return The ErrorCase object.
     */
    public static IntlVerificationsAddresses fromError(Error error) {
        return error == null ? null : new ErrorCase(error);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R intlVerification(IntlVerification intlVerification);

        R error(Error error);
    }

    /**
     * This is a implementation class for IntlVerificationCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "IntlVerification")
    private static class IntlVerificationCase extends IntlVerificationsAddresses {

        @JsonValue
        private IntlVerification intlVerification;

        IntlVerificationCase(IntlVerification intlVerification) {
            this.intlVerification = intlVerification;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.intlVerification(this.intlVerification);
        }

        @JsonCreator
        private IntlVerificationCase(JsonNode jsonNode) throws IOException {
            this.intlVerification = ApiHelper.deserialize(jsonNode,
                IntlVerification.class);
        }

        @Override
        public String toString() {
            return intlVerification.toString();
        }
    }

    /**
     * This is a implementation class for ErrorCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "Error")
    private static class ErrorCase extends IntlVerificationsAddresses {

        @JsonValue
        private Error error;

        ErrorCase(Error error) {
            this.error = error;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.error(this.error);
        }

        @JsonCreator
        private ErrorCase(JsonNode jsonNode) throws IOException {
            this.error = ApiHelper.deserialize(jsonNode,
                Error.class);
        }

        @Override
        public String toString() {
            return error.toString();
        }
    }

    /**
     * This is a custom deserializer class for IntlVerificationsAddresses.
     */
    protected static class IntlVerificationsAddressesDeserializer
            extends JsonDeserializer<IntlVerificationsAddresses> {

        @Override
        public IntlVerificationsAddresses deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(IntlVerificationCase.class,
                    ErrorCase.class), true);
        }
    }

}
