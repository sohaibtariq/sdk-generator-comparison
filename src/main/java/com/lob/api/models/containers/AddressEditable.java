/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.lob.api.ApiHelper;
import com.lob.api.models.AddressEditableIntl;
import com.lob.api.models.AddressEditableUs;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = AddressEditable.AddressEditableDeserializer.class)
public abstract class AddressEditable {
    
    /**
     * This is address_editable_us case.
     * @param addressEditableUs AddressEditableUs value for addressEditableUs.
     * @return The AddressEditableUsCase object.
     */
    public static AddressEditable fromAddressEditableUs(AddressEditableUs addressEditableUs) {
        return addressEditableUs == null ? null : new AddressEditableUsCase(addressEditableUs);
    }

    /**
     * This is address_editable_intl case.
     * @param addressEditableIntl AddressEditableIntl value for addressEditableIntl.
     * @return The AddressEditableIntlCase object.
     */
    public static AddressEditable fromAddressEditableIntl(AddressEditableIntl addressEditableIntl) {
        return addressEditableIntl == null ? null : new AddressEditableIntlCase(addressEditableIntl);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R addressEditableUs(AddressEditableUs addressEditableUs);

        R addressEditableIntl(AddressEditableIntl addressEditableIntl);
    }

    /**
     * This is a implementation class for AddressEditableUsCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AddressEditableUs")
    private static class AddressEditableUsCase extends AddressEditable {

        @JsonValue
        private AddressEditableUs addressEditableUs;

        AddressEditableUsCase(AddressEditableUs addressEditableUs) {
            this.addressEditableUs = addressEditableUs;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.addressEditableUs(this.addressEditableUs);
        }

        @JsonCreator
        private AddressEditableUsCase(JsonNode jsonNode) throws IOException {
            this.addressEditableUs = ApiHelper.deserialize(jsonNode,
                AddressEditableUs.class);
        }

        @Override
        public String toString() {
            return addressEditableUs.toString();
        }
    }

    /**
     * This is a implementation class for AddressEditableIntlCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AddressEditableIntl")
    private static class AddressEditableIntlCase extends AddressEditable {

        @JsonValue
        private AddressEditableIntl addressEditableIntl;

        AddressEditableIntlCase(AddressEditableIntl addressEditableIntl) {
            this.addressEditableIntl = addressEditableIntl;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.addressEditableIntl(this.addressEditableIntl);
        }

        @JsonCreator
        private AddressEditableIntlCase(JsonNode jsonNode) throws IOException {
            this.addressEditableIntl = ApiHelper.deserialize(jsonNode,
                AddressEditableIntl.class);
        }

        @Override
        public String toString() {
            return addressEditableIntl.toString();
        }
    }

    /**
     * This is a custom deserializer class for AddressEditable.
     */
    protected static class AddressEditableDeserializer
            extends JsonDeserializer<AddressEditable> {

        @Override
        public AddressEditable deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(AddressEditableUsCase.class,
                    AddressEditableIntlCase.class), true);
        }
    }

}
