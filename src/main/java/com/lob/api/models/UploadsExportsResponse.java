/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.lob.api.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for UploadsExportsResponse type.
 */
public class UploadsExportsResponse {
    private String id;
    private LocalDateTime dateCreated;
    private LocalDateTime dateModified;
    private boolean deleted;
    private String s3Url;
    private StateEnum state;
    private Type1Enum type;
    private String uploadId;

    /**
     * Default constructor.
     */
    public UploadsExportsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  dateCreated  LocalDateTime value for dateCreated.
     * @param  dateModified  LocalDateTime value for dateModified.
     * @param  deleted  boolean value for deleted.
     * @param  s3Url  String value for s3Url.
     * @param  state  StateEnum value for state.
     * @param  type  Type1Enum value for type.
     * @param  uploadId  String value for uploadId.
     */
    public UploadsExportsResponse(
            String id,
            LocalDateTime dateCreated,
            LocalDateTime dateModified,
            boolean deleted,
            String s3Url,
            StateEnum state,
            Type1Enum type,
            String uploadId) {
        this.id = id;
        this.dateCreated = dateCreated;
        this.dateModified = dateModified;
        this.deleted = deleted;
        this.s3Url = s3Url;
        this.state = state;
        this.type = type;
        this.uploadId = uploadId;
    }

    /**
     * Getter for Id.
     * Unique identifier prefixed with `ex_`.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier prefixed with `ex_`.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for DateCreated.
     * A timestamp in ISO 8601 format of the date the export was created
     * @return Returns the LocalDateTime
     */
    @JsonGetter("dateCreated")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateCreated() {
        return dateCreated;
    }

    /**
     * Setter for DateCreated.
     * A timestamp in ISO 8601 format of the date the export was created
     * @param dateCreated Value for LocalDateTime
     */
    @JsonSetter("dateCreated")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateCreated(LocalDateTime dateCreated) {
        this.dateCreated = dateCreated;
    }

    /**
     * Getter for DateModified.
     * A timestamp in ISO 8601 format of the date the export was last modified
     * @return Returns the LocalDateTime
     */
    @JsonGetter("dateModified")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDateModified() {
        return dateModified;
    }

    /**
     * Setter for DateModified.
     * A timestamp in ISO 8601 format of the date the export was last modified
     * @param dateModified Value for LocalDateTime
     */
    @JsonSetter("dateModified")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDateModified(LocalDateTime dateModified) {
        this.dateModified = dateModified;
    }

    /**
     * Getter for Deleted.
     * Returns as `true` if the resource has been successfully deleted.
     * @return Returns the boolean
     */
    @JsonGetter("deleted")
    public boolean getDeleted() {
        return deleted;
    }

    /**
     * Setter for Deleted.
     * Returns as `true` if the resource has been successfully deleted.
     * @param deleted Value for boolean
     */
    @JsonSetter("deleted")
    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * Getter for S3Url.
     * The URL for the generated export file.
     * @return Returns the String
     */
    @JsonGetter("s3Url")
    public String getS3Url() {
        return s3Url;
    }

    /**
     * Setter for S3Url.
     * The URL for the generated export file.
     * @param s3Url Value for String
     */
    @JsonSetter("s3Url")
    public void setS3Url(String s3Url) {
        this.s3Url = s3Url;
    }

    /**
     * Getter for State.
     * The state of the export file, which can be `in_progress`, `failed` or `succeeded`.
     * @return Returns the StateEnum
     */
    @JsonGetter("state")
    public StateEnum getState() {
        return state;
    }

    /**
     * Setter for State.
     * The state of the export file, which can be `in_progress`, `failed` or `succeeded`.
     * @param state Value for StateEnum
     */
    @JsonSetter("state")
    public void setState(StateEnum state) {
        this.state = state;
    }

    /**
     * Getter for Type.
     * The export file type, which can be `all`, `failures` or `successes`.
     * @return Returns the Type1Enum
     */
    @JsonGetter("type")
    public Type1Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * The export file type, which can be `all`, `failures` or `successes`.
     * @param type Value for Type1Enum
     */
    @JsonSetter("type")
    public void setType(Type1Enum type) {
        this.type = type;
    }

    /**
     * Getter for UploadId.
     * Unique identifier prefixed with `upl_`.
     * @return Returns the String
     */
    @JsonGetter("uploadId")
    public String getUploadId() {
        return uploadId;
    }

    /**
     * Setter for UploadId.
     * Unique identifier prefixed with `upl_`.
     * @param uploadId Value for String
     */
    @JsonSetter("uploadId")
    public void setUploadId(String uploadId) {
        this.uploadId = uploadId;
    }

    /**
     * Converts this UploadsExportsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UploadsExportsResponse [" + "id=" + id + ", dateCreated=" + dateCreated
                + ", dateModified=" + dateModified + ", deleted=" + deleted + ", s3Url=" + s3Url
                + ", state=" + state + ", type=" + type + ", uploadId=" + uploadId + "]";
    }

    /**
     * Builds a new {@link UploadsExportsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UploadsExportsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, dateCreated, dateModified, deleted, s3Url, state, type,
                uploadId);
        return builder;
    }

    /**
     * Class to build instances of {@link UploadsExportsResponse}.
     */
    public static class Builder {
        private String id;
        private LocalDateTime dateCreated;
        private LocalDateTime dateModified;
        private boolean deleted;
        private String s3Url;
        private StateEnum state;
        private Type1Enum type;
        private String uploadId;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  dateCreated  LocalDateTime value for dateCreated.
         * @param  dateModified  LocalDateTime value for dateModified.
         * @param  deleted  boolean value for deleted.
         * @param  s3Url  String value for s3Url.
         * @param  state  StateEnum value for state.
         * @param  type  Type1Enum value for type.
         * @param  uploadId  String value for uploadId.
         */
        public Builder(String id, LocalDateTime dateCreated, LocalDateTime dateModified,
                boolean deleted, String s3Url, StateEnum state, Type1Enum type, String uploadId) {
            this.id = id;
            this.dateCreated = dateCreated;
            this.dateModified = dateModified;
            this.deleted = deleted;
            this.s3Url = s3Url;
            this.state = state;
            this.type = type;
            this.uploadId = uploadId;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for dateCreated.
         * @param  dateCreated  LocalDateTime value for dateCreated.
         * @return Builder
         */
        public Builder dateCreated(LocalDateTime dateCreated) {
            this.dateCreated = dateCreated;
            return this;
        }

        /**
         * Setter for dateModified.
         * @param  dateModified  LocalDateTime value for dateModified.
         * @return Builder
         */
        public Builder dateModified(LocalDateTime dateModified) {
            this.dateModified = dateModified;
            return this;
        }

        /**
         * Setter for deleted.
         * @param  deleted  boolean value for deleted.
         * @return Builder
         */
        public Builder deleted(boolean deleted) {
            this.deleted = deleted;
            return this;
        }

        /**
         * Setter for s3Url.
         * @param  s3Url  String value for s3Url.
         * @return Builder
         */
        public Builder s3Url(String s3Url) {
            this.s3Url = s3Url;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  StateEnum value for state.
         * @return Builder
         */
        public Builder state(StateEnum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  Type1Enum value for type.
         * @return Builder
         */
        public Builder type(Type1Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for uploadId.
         * @param  uploadId  String value for uploadId.
         * @return Builder
         */
        public Builder uploadId(String uploadId) {
            this.uploadId = uploadId;
            return this;
        }

        /**
         * Builds a new {@link UploadsExportsResponse} object using the set fields.
         * @return {@link UploadsExportsResponse}
         */
        public UploadsExportsResponse build() {
            return new UploadsExportsResponse(id, dateCreated, dateModified, deleted, s3Url, state,
                    type, uploadId);
        }
    }
}
