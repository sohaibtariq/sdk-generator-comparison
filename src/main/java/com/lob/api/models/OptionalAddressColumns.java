/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for OptionalAddressColumns type.
 */
public class OptionalAddressColumns {
    private String addressLine2;
    private String company;
    private String addressCountry;

    /**
     * Default constructor.
     */
    public OptionalAddressColumns() {
    }

    /**
     * Initialization constructor.
     * @param  addressLine2  String value for addressLine2.
     * @param  company  String value for company.
     * @param  addressCountry  String value for addressCountry.
     */
    public OptionalAddressColumns(
            String addressLine2,
            String company,
            String addressCountry) {
        this.addressLine2 = addressLine2;
        this.company = company;
        this.addressCountry = addressCountry;
    }

    /**
     * Getter for AddressLine2.
     * The column header from the csv file that should be mapped to the optional field
     * "address_line2"
     * @return Returns the String
     */
    @JsonGetter("address_line2")
    public String getAddressLine2() {
        return addressLine2;
    }

    /**
     * Setter for AddressLine2.
     * The column header from the csv file that should be mapped to the optional field
     * "address_line2"
     * @param addressLine2 Value for String
     */
    @JsonSetter("address_line2")
    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    /**
     * Getter for Company.
     * The column header from the csv file that should be mapped to the optional field "company"
     * @return Returns the String
     */
    @JsonGetter("company")
    public String getCompany() {
        return company;
    }

    /**
     * Setter for Company.
     * The column header from the csv file that should be mapped to the optional field "company"
     * @param company Value for String
     */
    @JsonSetter("company")
    public void setCompany(String company) {
        this.company = company;
    }

    /**
     * Getter for AddressCountry.
     * The column header from the csv file that should be mapped to the optional field
     * "address_country"
     * @return Returns the String
     */
    @JsonGetter("address_country")
    public String getAddressCountry() {
        return addressCountry;
    }

    /**
     * Setter for AddressCountry.
     * The column header from the csv file that should be mapped to the optional field
     * "address_country"
     * @param addressCountry Value for String
     */
    @JsonSetter("address_country")
    public void setAddressCountry(String addressCountry) {
        this.addressCountry = addressCountry;
    }

    /**
     * Converts this OptionalAddressColumns into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OptionalAddressColumns [" + "addressLine2=" + addressLine2 + ", company=" + company
                + ", addressCountry=" + addressCountry + "]";
    }

    /**
     * Builds a new {@link OptionalAddressColumns.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OptionalAddressColumns.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(addressLine2, company, addressCountry);
        return builder;
    }

    /**
     * Class to build instances of {@link OptionalAddressColumns}.
     */
    public static class Builder {
        private String addressLine2;
        private String company;
        private String addressCountry;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  addressLine2  String value for addressLine2.
         * @param  company  String value for company.
         * @param  addressCountry  String value for addressCountry.
         */
        public Builder(String addressLine2, String company, String addressCountry) {
            this.addressLine2 = addressLine2;
            this.company = company;
            this.addressCountry = addressCountry;
        }

        /**
         * Setter for addressLine2.
         * @param  addressLine2  String value for addressLine2.
         * @return Builder
         */
        public Builder addressLine2(String addressLine2) {
            this.addressLine2 = addressLine2;
            return this;
        }

        /**
         * Setter for company.
         * @param  company  String value for company.
         * @return Builder
         */
        public Builder company(String company) {
            this.company = company;
            return this;
        }

        /**
         * Setter for addressCountry.
         * @param  addressCountry  String value for addressCountry.
         * @return Builder
         */
        public Builder addressCountry(String addressCountry) {
            this.addressCountry = addressCountry;
            return this;
        }

        /**
         * Builds a new {@link OptionalAddressColumns} object using the set fields.
         * @return {@link OptionalAddressColumns}
         */
        public OptionalAddressColumns build() {
            return new OptionalAddressColumns(addressLine2, company, addressCountry);
        }
    }
}
