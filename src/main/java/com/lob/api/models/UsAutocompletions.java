/*
 * LobLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.lob.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for UsAutocompletions type.
 */
public class UsAutocompletions {
    private String id;
    private List<Suggestions> suggestions;
    private Object13Enum object;

    /**
     * Default constructor.
     */
    public UsAutocompletions() {
        object = Object13Enum.US_AUTOCOMPLETION;
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  suggestions  List of Suggestions value for suggestions.
     * @param  object  Object13Enum value for object.
     */
    public UsAutocompletions(
            String id,
            List<Suggestions> suggestions,
            Object13Enum object) {
        this.id = id;
        this.suggestions = suggestions;
        this.object = object;
    }

    /**
     * Getter for Id.
     * Unique identifier prefixed with `us_auto_`.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier prefixed with `us_auto_`.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Suggestions.
     * An array of objects representing suggested addresses.
     * @return Returns the List of Suggestions
     */
    @JsonGetter("suggestions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Suggestions> getSuggestions() {
        return suggestions;
    }

    /**
     * Setter for Suggestions.
     * An array of objects representing suggested addresses.
     * @param suggestions Value for List of Suggestions
     */
    @JsonSetter("suggestions")
    public void setSuggestions(List<Suggestions> suggestions) {
        this.suggestions = suggestions;
    }

    /**
     * Getter for Object.
     * Value is resource type.
     * @return Returns the Object13Enum
     */
    @JsonGetter("object")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object13Enum getObject() {
        return object;
    }

    /**
     * Setter for Object.
     * Value is resource type.
     * @param object Value for Object13Enum
     */
    @JsonSetter("object")
    public void setObject(Object13Enum object) {
        this.object = object;
    }

    /**
     * Converts this UsAutocompletions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UsAutocompletions [" + "id=" + id + ", suggestions=" + suggestions + ", object="
                + object + "]";
    }

    /**
     * Builds a new {@link UsAutocompletions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UsAutocompletions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .suggestions(getSuggestions())
                .object(getObject());
        return builder;
    }

    /**
     * Class to build instances of {@link UsAutocompletions}.
     */
    public static class Builder {
        private String id;
        private List<Suggestions> suggestions;
        private Object13Enum object = Object13Enum.US_AUTOCOMPLETION;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for suggestions.
         * @param  suggestions  List of Suggestions value for suggestions.
         * @return Builder
         */
        public Builder suggestions(List<Suggestions> suggestions) {
            this.suggestions = suggestions;
            return this;
        }

        /**
         * Setter for object.
         * @param  object  Object13Enum value for object.
         * @return Builder
         */
        public Builder object(Object13Enum object) {
            this.object = object;
            return this;
        }

        /**
         * Builds a new {@link UsAutocompletions} object using the set fields.
         * @return {@link UsAutocompletions}
         */
        public UsAutocompletions build() {
            return new UsAutocompletions(id, suggestions, object);
        }
    }
}
